// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "onnx.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace onnx {
class AttributeProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AttributeProto>
     _instance;
} _AttributeProto_default_instance_;
class ValueInfoProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ValueInfoProto>
     _instance;
} _ValueInfoProto_default_instance_;
class NodeProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NodeProto>
     _instance;
} _NodeProto_default_instance_;
class ModelProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModelProto>
     _instance;
} _ModelProto_default_instance_;
class StringStringEntryProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StringStringEntryProto>
     _instance;
} _StringStringEntryProto_default_instance_;
class GraphProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GraphProto>
     _instance;
} _GraphProto_default_instance_;
class TensorProto_SegmentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TensorProto_Segment>
     _instance;
} _TensorProto_Segment_default_instance_;
class TensorProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TensorProto>
     _instance;
} _TensorProto_default_instance_;
class TensorShapeProto_DimensionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TensorShapeProto_Dimension>
     _instance;
  ::google::protobuf::int64 dim_value_;
  ::google::protobuf::internal::ArenaStringPtr dim_param_;
} _TensorShapeProto_Dimension_default_instance_;
class TensorShapeProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TensorShapeProto>
     _instance;
} _TensorShapeProto_default_instance_;
class TypeProto_TensorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_Tensor>
     _instance;
} _TypeProto_Tensor_default_instance_;
class TypeProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TypeProto>
     _instance;
  const ::onnx::TypeProto_Tensor* tensor_type_;
} _TypeProto_default_instance_;
class OperatorSetIdProtoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OperatorSetIdProto>
     _instance;
} _OperatorSetIdProto_default_instance_;

namespace protobuf_onnx_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, ref_attr_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, doc_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, i_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, floats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, ints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, strings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, tensors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, graphs_),
  0,
  3,
  2,
  8,
  7,
  6,
  1,
  4,
  5,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, doc_string_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, doc_string_),
  ~0u,
  ~0u,
  0,
  1,
  3,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, ir_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, opset_import_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, producer_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, producer_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, model_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, doc_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, metadata_props_),
  5,
  ~0u,
  0,
  1,
  2,
  6,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringStringEntryProto, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, initializer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, doc_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, value_info_),
  ~0u,
  0,
  ~0u,
  1,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, end_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, dims_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, segment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, float_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, int32_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, string_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, int64_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, doc_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, raw_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, double_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, uint64_data_),
  ~0u,
  4,
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  2,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(TensorShapeProto_DimensionDefaultTypeInternal, dim_value_),
  offsetof(TensorShapeProto_DimensionDefaultTypeInternal, dim_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, denotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto_Dimension, value_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorShapeProto, dim_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, elem_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_Tensor, shape_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(TypeProtoDefaultTypeInternal, tensor_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, denotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, value_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetIdProto, version_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(AttributeProto)},
  { 33, 41, sizeof(ValueInfoProto)},
  { 44, 56, sizeof(NodeProto)},
  { 63, 77, sizeof(ModelProto)},
  { 86, 93, sizeof(StringStringEntryProto)},
  { 95, 107, sizeof(GraphProto)},
  { 114, 121, sizeof(TensorProto_Segment)},
  { 123, 140, sizeof(TensorProto)},
  { 152, 161, sizeof(TensorShapeProto_Dimension)},
  { 164, 170, sizeof(TensorShapeProto)},
  { 171, 178, sizeof(TypeProto_Tensor)},
  { 180, 188, sizeof(TypeProto)},
  { 190, 197, sizeof(OperatorSetIdProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttributeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ValueInfoProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModelProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringStringEntryProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GraphProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TensorProto_Segment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TensorProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TensorShapeProto_Dimension_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TensorShapeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TypeProto_Tensor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TypeProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OperatorSetIdProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "onnx.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AttributeProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AttributeProto_default_instance_);_ValueInfoProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ValueInfoProto_default_instance_);_NodeProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NodeProto_default_instance_);_ModelProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModelProto_default_instance_);_StringStringEntryProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StringStringEntryProto_default_instance_);_GraphProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GraphProto_default_instance_);_TensorProto_Segment_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TensorProto_Segment_default_instance_);_TensorProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TensorProto_default_instance_);_TensorShapeProto_Dimension_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TensorShapeProto_Dimension_default_instance_);_TensorShapeProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TensorShapeProto_default_instance_);_TypeProto_Tensor_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TypeProto_Tensor_default_instance_);_TypeProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TypeProto_default_instance_);_OperatorSetIdProto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OperatorSetIdProto_default_instance_);_AttributeProto_default_instance_._instance.get_mutable()->t_ = const_cast< ::onnx::TensorProto*>(
      ::onnx::TensorProto::internal_default_instance());
  _AttributeProto_default_instance_._instance.get_mutable()->g_ = const_cast< ::onnx::GraphProto*>(
      ::onnx::GraphProto::internal_default_instance());
  _ValueInfoProto_default_instance_._instance.get_mutable()->type_ = const_cast< ::onnx::TypeProto*>(
      ::onnx::TypeProto::internal_default_instance());
  _ModelProto_default_instance_._instance.get_mutable()->graph_ = const_cast< ::onnx::GraphProto*>(
      ::onnx::GraphProto::internal_default_instance());
  _TensorProto_default_instance_._instance.get_mutable()->segment_ = const_cast< ::onnx::TensorProto_Segment*>(
      ::onnx::TensorProto_Segment::internal_default_instance());
  _TensorShapeProto_Dimension_default_instance_.dim_value_ = GOOGLE_LONGLONG(0);
  _TensorShapeProto_Dimension_default_instance_.dim_param_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _TypeProto_Tensor_default_instance_._instance.get_mutable()->shape_ = const_cast< ::onnx::TensorShapeProto*>(
      ::onnx::TensorShapeProto::internal_default_instance());
  _TypeProto_default_instance_.tensor_type_ = const_cast< ::onnx::TypeProto_Tensor*>(
      ::onnx::TypeProto_Tensor::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nonnx.proto\022\004onnx\"\340\003\n\016AttributeProto\022\014\n"
      "\004name\030\001 \001(\t\022\025\n\rref_attr_name\030\025 \001(\t\022\022\n\ndo"
      "c_string\030\r \001(\t\0220\n\004type\030\024 \001(\0162\".onnx.Attr"
      "ibuteProto.AttributeType\022\t\n\001f\030\002 \001(\002\022\t\n\001i"
      "\030\003 \001(\003\022\t\n\001s\030\004 \001(\014\022\034\n\001t\030\005 \001(\0132\021.onnx.Tens"
      "orProto\022\033\n\001g\030\006 \001(\0132\020.onnx.GraphProto\022\016\n\006"
      "floats\030\007 \003(\002\022\014\n\004ints\030\010 \003(\003\022\017\n\007strings\030\t "
      "\003(\014\022\"\n\007tensors\030\n \003(\0132\021.onnx.TensorProto\022"
      " \n\006graphs\030\013 \003(\0132\020.onnx.GraphProto\"\221\001\n\rAt"
      "tributeType\022\r\n\tUNDEFINED\020\000\022\t\n\005FLOAT\020\001\022\007\n"
      "\003INT\020\002\022\n\n\006STRING\020\003\022\n\n\006TENSOR\020\004\022\t\n\005GRAPH\020"
      "\005\022\n\n\006FLOATS\020\006\022\010\n\004INTS\020\007\022\013\n\007STRINGS\020\010\022\013\n\007"
      "TENSORS\020\t\022\n\n\006GRAPHS\020\n\"Q\n\016ValueInfoProto\022"
      "\014\n\004name\030\001 \001(\t\022\035\n\004type\030\002 \001(\0132\017.onnx.TypeP"
      "roto\022\022\n\ndoc_string\030\003 \001(\t\"\226\001\n\tNodeProto\022\r"
      "\n\005input\030\001 \003(\t\022\016\n\006output\030\002 \003(\t\022\014\n\004name\030\003 "
      "\001(\t\022\017\n\007op_type\030\004 \001(\t\022\016\n\006domain\030\007 \001(\t\022\'\n\t"
      "attribute\030\005 \003(\0132\024.onnx.AttributeProto\022\022\n"
      "\ndoc_string\030\006 \001(\t\"\223\002\n\nModelProto\022\022\n\nir_v"
      "ersion\030\001 \001(\003\022.\n\014opset_import\030\010 \003(\0132\030.onn"
      "x.OperatorSetIdProto\022\025\n\rproducer_name\030\002 "
      "\001(\t\022\030\n\020producer_version\030\003 \001(\t\022\016\n\006domain\030"
      "\004 \001(\t\022\025\n\rmodel_version\030\005 \001(\003\022\022\n\ndoc_stri"
      "ng\030\006 \001(\t\022\037\n\005graph\030\007 \001(\0132\020.onnx.GraphProt"
      "o\0224\n\016metadata_props\030\016 \003(\0132\034.onnx.StringS"
      "tringEntryProto\"4\n\026StringStringEntryProt"
      "o\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\352\001\n\nGraphP"
      "roto\022\035\n\004node\030\001 \003(\0132\017.onnx.NodeProto\022\014\n\004n"
      "ame\030\002 \001(\t\022&\n\013initializer\030\005 \003(\0132\021.onnx.Te"
      "nsorProto\022\022\n\ndoc_string\030\n \001(\t\022#\n\005input\030\013"
      " \003(\0132\024.onnx.ValueInfoProto\022$\n\006output\030\014 \003"
      "(\0132\024.onnx.ValueInfoProto\022(\n\nvalue_info\030\r"
      " \003(\0132\024.onnx.ValueInfoProto\"\241\004\n\013TensorPro"
      "to\022\014\n\004dims\030\001 \003(\003\022\021\n\tdata_type\030\002 \001(\005\022*\n\007s"
      "egment\030\003 \001(\0132\031.onnx.TensorProto.Segment\022"
      "\026\n\nfloat_data\030\004 \003(\002B\002\020\001\022\026\n\nint32_data\030\005 "
      "\003(\005B\002\020\001\022\023\n\013string_data\030\006 \003(\014\022\026\n\nint64_da"
      "ta\030\007 \003(\003B\002\020\001\022\014\n\004name\030\010 \001(\t\022\022\n\ndoc_string"
      "\030\014 \001(\t\022\020\n\010raw_data\030\t \001(\014\022\027\n\013double_data\030"
      "\n \003(\001B\002\020\001\022\027\n\013uint64_data\030\013 \003(\004B\002\020\001\032%\n\007Se"
      "gment\022\r\n\005begin\030\001 \001(\003\022\013\n\003end\030\002 \001(\003\"\332\001\n\010Da"
      "taType\022\r\n\tUNDEFINED\020\000\022\t\n\005FLOAT\020\001\022\t\n\005UINT"
      "8\020\002\022\010\n\004INT8\020\003\022\n\n\006UINT16\020\004\022\t\n\005INT16\020\005\022\t\n\005"
      "INT32\020\006\022\t\n\005INT64\020\007\022\n\n\006STRING\020\010\022\010\n\004BOOL\020\t"
      "\022\013\n\007FLOAT16\020\n\022\n\n\006DOUBLE\020\013\022\n\n\006UINT32\020\014\022\n\n"
      "\006UINT64\020\r\022\r\n\tCOMPLEX64\020\016\022\016\n\nCOMPLEX128\020\017"
      "\022\014\n\010BFLOAT16\020\020\"\225\001\n\020TensorShapeProto\022-\n\003d"
      "im\030\001 \003(\0132 .onnx.TensorShapeProto.Dimensi"
      "on\032R\n\tDimension\022\023\n\tdim_value\030\001 \001(\003H\000\022\023\n\t"
      "dim_param\030\002 \001(\tH\000\022\022\n\ndenotation\030\003 \001(\tB\007\n"
      "\005value\"\233\001\n\tTypeProto\022-\n\013tensor_type\030\001 \001("
      "\0132\026.onnx.TypeProto.TensorH\000\022\022\n\ndenotatio"
      "n\030\006 \001(\t\032B\n\006Tensor\022\021\n\telem_type\030\001 \001(\005\022%\n\005"
      "shape\030\002 \001(\0132\026.onnx.TensorShapeProtoB\007\n\005v"
      "alue\"5\n\022OperatorSetIdProto\022\016\n\006domain\030\001 \001"
      "(\t\022\017\n\007version\030\002 \001(\003*c\n\007Version\022\022\n\016_START"
      "_VERSION\020\000\022\031\n\025IR_VERSION_2017_10_10\020\001\022\031\n"
      "\025IR_VERSION_2017_10_30\020\002\022\016\n\nIR_VERSION\020\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "onnx.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_onnx_2eproto

const ::google::protobuf::EnumDescriptor* AttributeProto_AttributeType_descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_enum_descriptors[0];
}
bool AttributeProto_AttributeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AttributeProto_AttributeType AttributeProto::UNDEFINED;
const AttributeProto_AttributeType AttributeProto::FLOAT;
const AttributeProto_AttributeType AttributeProto::INT;
const AttributeProto_AttributeType AttributeProto::STRING;
const AttributeProto_AttributeType AttributeProto::TENSOR;
const AttributeProto_AttributeType AttributeProto::GRAPH;
const AttributeProto_AttributeType AttributeProto::FLOATS;
const AttributeProto_AttributeType AttributeProto::INTS;
const AttributeProto_AttributeType AttributeProto::STRINGS;
const AttributeProto_AttributeType AttributeProto::TENSORS;
const AttributeProto_AttributeType AttributeProto::GRAPHS;
const AttributeProto_AttributeType AttributeProto::AttributeType_MIN;
const AttributeProto_AttributeType AttributeProto::AttributeType_MAX;
const int AttributeProto::AttributeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TensorProto_DataType_descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_enum_descriptors[1];
}
bool TensorProto_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TensorProto_DataType TensorProto::UNDEFINED;
const TensorProto_DataType TensorProto::FLOAT;
const TensorProto_DataType TensorProto::UINT8;
const TensorProto_DataType TensorProto::INT8;
const TensorProto_DataType TensorProto::UINT16;
const TensorProto_DataType TensorProto::INT16;
const TensorProto_DataType TensorProto::INT32;
const TensorProto_DataType TensorProto::INT64;
const TensorProto_DataType TensorProto::STRING;
const TensorProto_DataType TensorProto::BOOL;
const TensorProto_DataType TensorProto::FLOAT16;
const TensorProto_DataType TensorProto::DOUBLE;
const TensorProto_DataType TensorProto::UINT32;
const TensorProto_DataType TensorProto::UINT64;
const TensorProto_DataType TensorProto::COMPLEX64;
const TensorProto_DataType TensorProto::COMPLEX128;
const TensorProto_DataType TensorProto::BFLOAT16;
const TensorProto_DataType TensorProto::DataType_MIN;
const TensorProto_DataType TensorProto::DataType_MAX;
const int TensorProto::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Version_descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_enum_descriptors[2];
}
bool Version_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeProto::kNameFieldNumber;
const int AttributeProto::kRefAttrNameFieldNumber;
const int AttributeProto::kDocStringFieldNumber;
const int AttributeProto::kTypeFieldNumber;
const int AttributeProto::kFFieldNumber;
const int AttributeProto::kIFieldNumber;
const int AttributeProto::kSFieldNumber;
const int AttributeProto::kTFieldNumber;
const int AttributeProto::kGFieldNumber;
const int AttributeProto::kFloatsFieldNumber;
const int AttributeProto::kIntsFieldNumber;
const int AttributeProto::kStringsFieldNumber;
const int AttributeProto::kTensorsFieldNumber;
const int AttributeProto::kGraphsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeProto::AttributeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.AttributeProto)
}
AttributeProto::AttributeProto(const AttributeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      floats_(from.floats_),
      ints_(from.ints_),
      strings_(from.strings_),
      tensors_(from.tensors_),
      graphs_(from.graphs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_s()) {
    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_doc_string()) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  ref_attr_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ref_attr_name()) {
    ref_attr_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_attr_name_);
  }
  if (from.has_t()) {
    t_ = new ::onnx::TensorProto(*from.t_);
  } else {
    t_ = NULL;
  }
  if (from.has_g()) {
    g_ = new ::onnx::GraphProto(*from.g_);
  } else {
    g_ = NULL;
  }
  ::memcpy(&i_, &from.i_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&i_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:onnx.AttributeProto)
}

void AttributeProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_attr_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&t_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&t_)) + sizeof(type_));
}

AttributeProto::~AttributeProto() {
  // @@protoc_insertion_point(destructor:onnx.AttributeProto)
  SharedDtor();
}

void AttributeProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ref_attr_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete t_;
  if (this != internal_default_instance()) delete g_;
}

void AttributeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttributeProto& AttributeProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttributeProto* AttributeProto::New(::google::protobuf::Arena* arena) const {
  AttributeProto* n = new AttributeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttributeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.AttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  floats_.Clear();
  ints_.Clear();
  strings_.Clear();
  tensors_.Clear();
  graphs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!s_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*s_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!doc_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*doc_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!ref_attr_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ref_attr_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(t_ != NULL);
      t_->::onnx::TensorProto::Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(g_ != NULL);
      g_->::onnx::GraphProto::Clear();
    }
  }
  if (cached_has_bits & 192u) {
    ::memset(&i_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&f_) -
        reinterpret_cast<char*>(&i_)) + sizeof(f_));
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AttributeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.AttributeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.AttributeProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float f = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_f();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 i = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes s = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.TensorProto t = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.GraphProto g = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_g()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float floats = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61u, input, this->mutable_floats())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 ints = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 64u, input, this->mutable_ints())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes strings = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.TensorProto tensors = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tensors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.GraphProto graphs = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_graphs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string doc_string = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.AttributeProto.doc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.AttributeProto.AttributeType type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::onnx::AttributeProto_AttributeType_IsValid(value)) {
            set_type(static_cast< ::onnx::AttributeProto_AttributeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                20, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ref_attr_name = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ref_attr_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ref_attr_name().data(), static_cast<int>(this->ref_attr_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.AttributeProto.ref_attr_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.AttributeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.AttributeProto)
  return false;
#undef DO_
}

void AttributeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.AttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.AttributeProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float f = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->f(), output);
  }

  // optional int64 i = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->i(), output);
  }

  // optional bytes s = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->s(), output);
  }

  // optional .onnx.TensorProto t = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->t_, output);
  }

  // optional .onnx.GraphProto g = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->g_, output);
  }

  // repeated float floats = 7;
  for (int i = 0, n = this->floats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->floats(i), output);
  }

  // repeated int64 ints = 8;
  for (int i = 0, n = this->ints_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      8, this->ints(i), output);
  }

  // repeated bytes strings = 9;
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->strings(i), output);
  }

  // repeated .onnx.TensorProto tensors = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->tensors(static_cast<int>(i)), output);
  }

  // repeated .onnx.GraphProto graphs = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->graphs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->graphs(static_cast<int>(i)), output);
  }

  // optional string doc_string = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.AttributeProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->doc_string(), output);
  }

  // optional .onnx.AttributeProto.AttributeType type = 20;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->type(), output);
  }

  // optional string ref_attr_name = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ref_attr_name().data(), static_cast<int>(this->ref_attr_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.AttributeProto.ref_attr_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->ref_attr_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.AttributeProto)
}

::google::protobuf::uint8* AttributeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.AttributeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.AttributeProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float f = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->f(), target);
  }

  // optional int64 i = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->i(), target);
  }

  // optional bytes s = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->s(), target);
  }

  // optional .onnx.TensorProto t = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->t_, deterministic, target);
  }

  // optional .onnx.GraphProto g = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->g_, deterministic, target);
  }

  // repeated float floats = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(7, this->floats_, target);

  // repeated int64 ints = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(8, this->ints_, target);

  // repeated bytes strings = 9;
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(9, this->strings(i), target);
  }

  // repeated .onnx.TensorProto tensors = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tensors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->tensors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .onnx.GraphProto graphs = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->graphs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->graphs(static_cast<int>(i)), deterministic, target);
  }

  // optional string doc_string = 13;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.AttributeProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->doc_string(), target);
  }

  // optional .onnx.AttributeProto.AttributeType type = 20;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->type(), target);
  }

  // optional string ref_attr_name = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ref_attr_name().data(), static_cast<int>(this->ref_attr_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.AttributeProto.ref_attr_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->ref_attr_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.AttributeProto)
  return target;
}

size_t AttributeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.AttributeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated float floats = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->floats_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->floats_size());
    total_size += data_size;
  }

  // repeated int64 ints = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->ints_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ints_size());
    total_size += data_size;
  }

  // repeated bytes strings = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  for (int i = 0, n = this->strings_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->strings(i));
  }

  // repeated .onnx.TensorProto tensors = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->tensors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tensors(static_cast<int>(i)));
    }
  }

  // repeated .onnx.GraphProto graphs = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->graphs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->graphs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes s = 4;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->s());
    }

    // optional string doc_string = 13;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional string ref_attr_name = 21;
    if (has_ref_attr_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ref_attr_name());
    }

    // optional .onnx.TensorProto t = 5;
    if (has_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->t_);
    }

    // optional .onnx.GraphProto g = 6;
    if (has_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->g_);
    }

    // optional int64 i = 3;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i());
    }

    // optional float f = 2;
    if (has_f()) {
      total_size += 1 + 4;
    }

  }
  // optional .onnx.AttributeProto.AttributeType type = 20;
  if (has_type()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.AttributeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const AttributeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.AttributeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.AttributeProto)
    MergeFrom(*source);
  }
}

void AttributeProto::MergeFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.AttributeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  floats_.MergeFrom(from.floats_);
  ints_.MergeFrom(from.ints_);
  strings_.MergeFrom(from.strings_);
  tensors_.MergeFrom(from.tensors_);
  graphs_.MergeFrom(from.graphs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_s();
      s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_ref_attr_name();
      ref_attr_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ref_attr_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_t()->::onnx::TensorProto::MergeFrom(from.t());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_g()->::onnx::GraphProto::MergeFrom(from.g());
    }
    if (cached_has_bits & 0x00000040u) {
      i_ = from.i_;
    }
    if (cached_has_bits & 0x00000080u) {
      f_ = from.f_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_type(from.type());
  }
}

void AttributeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.AttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeProto::CopyFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.AttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttributeProto::IsInitialized() const {
  return true;
}

void AttributeProto::Swap(AttributeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttributeProto::InternalSwap(AttributeProto* other) {
  using std::swap;
  floats_.InternalSwap(&other->floats_);
  ints_.InternalSwap(&other->ints_);
  strings_.InternalSwap(&other->strings_);
  tensors_.InternalSwap(&other->tensors_);
  graphs_.InternalSwap(&other->graphs_);
  name_.Swap(&other->name_);
  s_.Swap(&other->s_);
  doc_string_.Swap(&other->doc_string_);
  ref_attr_name_.Swap(&other->ref_attr_name_);
  swap(t_, other->t_);
  swap(g_, other->g_);
  swap(i_, other->i_);
  swap(f_, other->f_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttributeProto

// optional string name = 1;
bool AttributeProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AttributeProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AttributeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AttributeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AttributeProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.name)
  return name_.GetNoArena();
}
void AttributeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.name)
}
#if LANG_CXX11
void AttributeProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.AttributeProto.name)
}
#endif
void AttributeProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.AttributeProto.name)
}
void AttributeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.AttributeProto.name)
}
::std::string* AttributeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttributeProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.AttributeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.AttributeProto.name)
}

// optional string ref_attr_name = 21;
bool AttributeProto::has_ref_attr_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AttributeProto::set_has_ref_attr_name() {
  _has_bits_[0] |= 0x00000008u;
}
void AttributeProto::clear_has_ref_attr_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void AttributeProto::clear_ref_attr_name() {
  ref_attr_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ref_attr_name();
}
const ::std::string& AttributeProto::ref_attr_name() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.ref_attr_name)
  return ref_attr_name_.GetNoArena();
}
void AttributeProto::set_ref_attr_name(const ::std::string& value) {
  set_has_ref_attr_name();
  ref_attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.ref_attr_name)
}
#if LANG_CXX11
void AttributeProto::set_ref_attr_name(::std::string&& value) {
  set_has_ref_attr_name();
  ref_attr_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.AttributeProto.ref_attr_name)
}
#endif
void AttributeProto::set_ref_attr_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ref_attr_name();
  ref_attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.AttributeProto.ref_attr_name)
}
void AttributeProto::set_ref_attr_name(const char* value, size_t size) {
  set_has_ref_attr_name();
  ref_attr_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.AttributeProto.ref_attr_name)
}
::std::string* AttributeProto::mutable_ref_attr_name() {
  set_has_ref_attr_name();
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.ref_attr_name)
  return ref_attr_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttributeProto::release_ref_attr_name() {
  // @@protoc_insertion_point(field_release:onnx.AttributeProto.ref_attr_name)
  clear_has_ref_attr_name();
  return ref_attr_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_allocated_ref_attr_name(::std::string* ref_attr_name) {
  if (ref_attr_name != NULL) {
    set_has_ref_attr_name();
  } else {
    clear_has_ref_attr_name();
  }
  ref_attr_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ref_attr_name);
  // @@protoc_insertion_point(field_set_allocated:onnx.AttributeProto.ref_attr_name)
}

// optional string doc_string = 13;
bool AttributeProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AttributeProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
void AttributeProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
void AttributeProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& AttributeProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.doc_string)
  return doc_string_.GetNoArena();
}
void AttributeProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.doc_string)
}
#if LANG_CXX11
void AttributeProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.AttributeProto.doc_string)
}
#endif
void AttributeProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.AttributeProto.doc_string)
}
void AttributeProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.AttributeProto.doc_string)
}
::std::string* AttributeProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttributeProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.AttributeProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.AttributeProto.doc_string)
}

// optional .onnx.AttributeProto.AttributeType type = 20;
bool AttributeProto::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AttributeProto::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
void AttributeProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
void AttributeProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
::onnx::AttributeProto_AttributeType AttributeProto::type() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.type)
  return static_cast< ::onnx::AttributeProto_AttributeType >(type_);
}
void AttributeProto::set_type(::onnx::AttributeProto_AttributeType value) {
  assert(::onnx::AttributeProto_AttributeType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.type)
}

// optional float f = 2;
bool AttributeProto::has_f() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AttributeProto::set_has_f() {
  _has_bits_[0] |= 0x00000080u;
}
void AttributeProto::clear_has_f() {
  _has_bits_[0] &= ~0x00000080u;
}
void AttributeProto::clear_f() {
  f_ = 0;
  clear_has_f();
}
float AttributeProto::f() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.f)
  return f_;
}
void AttributeProto::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.f)
}

// optional int64 i = 3;
bool AttributeProto::has_i() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AttributeProto::set_has_i() {
  _has_bits_[0] |= 0x00000040u;
}
void AttributeProto::clear_has_i() {
  _has_bits_[0] &= ~0x00000040u;
}
void AttributeProto::clear_i() {
  i_ = GOOGLE_LONGLONG(0);
  clear_has_i();
}
::google::protobuf::int64 AttributeProto::i() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.i)
  return i_;
}
void AttributeProto::set_i(::google::protobuf::int64 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.i)
}

// optional bytes s = 4;
bool AttributeProto::has_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AttributeProto::set_has_s() {
  _has_bits_[0] |= 0x00000002u;
}
void AttributeProto::clear_has_s() {
  _has_bits_[0] &= ~0x00000002u;
}
void AttributeProto::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
const ::std::string& AttributeProto::s() const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.s)
  return s_.GetNoArena();
}
void AttributeProto::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.s)
}
#if LANG_CXX11
void AttributeProto::set_s(::std::string&& value) {
  set_has_s();
  s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.AttributeProto.s)
}
#endif
void AttributeProto::set_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.AttributeProto.s)
}
void AttributeProto::set_s(const void* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.AttributeProto.s)
}
::std::string* AttributeProto::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttributeProto::release_s() {
  // @@protoc_insertion_point(field_release:onnx.AttributeProto.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:onnx.AttributeProto.s)
}

// optional .onnx.TensorProto t = 5;
bool AttributeProto::has_t() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AttributeProto::set_has_t() {
  _has_bits_[0] |= 0x00000010u;
}
void AttributeProto::clear_has_t() {
  _has_bits_[0] &= ~0x00000010u;
}
void AttributeProto::clear_t() {
  if (t_ != NULL) t_->::onnx::TensorProto::Clear();
  clear_has_t();
}
const ::onnx::TensorProto& AttributeProto::t() const {
  const ::onnx::TensorProto* p = t_;
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.t)
  return p != NULL ? *p : *reinterpret_cast<const ::onnx::TensorProto*>(
      &::onnx::_TensorProto_default_instance_);
}
::onnx::TensorProto* AttributeProto::mutable_t() {
  set_has_t();
  if (t_ == NULL) {
    t_ = new ::onnx::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.t)
  return t_;
}
::onnx::TensorProto* AttributeProto::release_t() {
  // @@protoc_insertion_point(field_release:onnx.AttributeProto.t)
  clear_has_t();
  ::onnx::TensorProto* temp = t_;
  t_ = NULL;
  return temp;
}
void AttributeProto::set_allocated_t(::onnx::TensorProto* t) {
  delete t_;
  t_ = t;
  if (t) {
    set_has_t();
  } else {
    clear_has_t();
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.AttributeProto.t)
}

// optional .onnx.GraphProto g = 6;
bool AttributeProto::has_g() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AttributeProto::set_has_g() {
  _has_bits_[0] |= 0x00000020u;
}
void AttributeProto::clear_has_g() {
  _has_bits_[0] &= ~0x00000020u;
}
void AttributeProto::clear_g() {
  if (g_ != NULL) g_->::onnx::GraphProto::Clear();
  clear_has_g();
}
const ::onnx::GraphProto& AttributeProto::g() const {
  const ::onnx::GraphProto* p = g_;
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.g)
  return p != NULL ? *p : *reinterpret_cast<const ::onnx::GraphProto*>(
      &::onnx::_GraphProto_default_instance_);
}
::onnx::GraphProto* AttributeProto::mutable_g() {
  set_has_g();
  if (g_ == NULL) {
    g_ = new ::onnx::GraphProto;
  }
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.g)
  return g_;
}
::onnx::GraphProto* AttributeProto::release_g() {
  // @@protoc_insertion_point(field_release:onnx.AttributeProto.g)
  clear_has_g();
  ::onnx::GraphProto* temp = g_;
  g_ = NULL;
  return temp;
}
void AttributeProto::set_allocated_g(::onnx::GraphProto* g) {
  delete g_;
  g_ = g;
  if (g) {
    set_has_g();
  } else {
    clear_has_g();
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.AttributeProto.g)
}

// repeated float floats = 7;
int AttributeProto::floats_size() const {
  return floats_.size();
}
void AttributeProto::clear_floats() {
  floats_.Clear();
}
float AttributeProto::floats(int index) const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.floats)
  return floats_.Get(index);
}
void AttributeProto::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.floats)
}
void AttributeProto::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.AttributeProto.floats)
}
const ::google::protobuf::RepeatedField< float >&
AttributeProto::floats() const {
  // @@protoc_insertion_point(field_list:onnx.AttributeProto.floats)
  return floats_;
}
::google::protobuf::RepeatedField< float >*
AttributeProto::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:onnx.AttributeProto.floats)
  return &floats_;
}

// repeated int64 ints = 8;
int AttributeProto::ints_size() const {
  return ints_.size();
}
void AttributeProto::clear_ints() {
  ints_.Clear();
}
::google::protobuf::int64 AttributeProto::ints(int index) const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.ints)
  return ints_.Get(index);
}
void AttributeProto::set_ints(int index, ::google::protobuf::int64 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.ints)
}
void AttributeProto::add_ints(::google::protobuf::int64 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.AttributeProto.ints)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AttributeProto::ints() const {
  // @@protoc_insertion_point(field_list:onnx.AttributeProto.ints)
  return ints_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AttributeProto::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:onnx.AttributeProto.ints)
  return &ints_;
}

// repeated bytes strings = 9;
int AttributeProto::strings_size() const {
  return strings_.size();
}
void AttributeProto::clear_strings() {
  strings_.Clear();
}
const ::std::string& AttributeProto::strings(int index) const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.strings)
  return strings_.Get(index);
}
::std::string* AttributeProto::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.strings)
  return strings_.Mutable(index);
}
void AttributeProto::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.strings)
  strings_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AttributeProto::set_strings(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:onnx.AttributeProto.strings)
  strings_.Mutable(index)->assign(std::move(value));
}
#endif
void AttributeProto::set_strings(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.AttributeProto.strings)
}
void AttributeProto::set_strings(int index, const void* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.AttributeProto.strings)
}
::std::string* AttributeProto::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:onnx.AttributeProto.strings)
  return strings_.Add();
}
void AttributeProto::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.AttributeProto.strings)
}
#if LANG_CXX11
void AttributeProto::add_strings(::std::string&& value) {
  strings_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:onnx.AttributeProto.strings)
}
#endif
void AttributeProto::add_strings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.AttributeProto.strings)
}
void AttributeProto::add_strings(const void* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.AttributeProto.strings)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeProto::strings() const {
  // @@protoc_insertion_point(field_list:onnx.AttributeProto.strings)
  return strings_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeProto::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:onnx.AttributeProto.strings)
  return &strings_;
}

// repeated .onnx.TensorProto tensors = 10;
int AttributeProto::tensors_size() const {
  return tensors_.size();
}
void AttributeProto::clear_tensors() {
  tensors_.Clear();
}
const ::onnx::TensorProto& AttributeProto::tensors(int index) const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.tensors)
  return tensors_.Get(index);
}
::onnx::TensorProto* AttributeProto::mutable_tensors(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.tensors)
  return tensors_.Mutable(index);
}
::onnx::TensorProto* AttributeProto::add_tensors() {
  // @@protoc_insertion_point(field_add:onnx.AttributeProto.tensors)
  return tensors_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::TensorProto >*
AttributeProto::mutable_tensors() {
  // @@protoc_insertion_point(field_mutable_list:onnx.AttributeProto.tensors)
  return &tensors_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::TensorProto >&
AttributeProto::tensors() const {
  // @@protoc_insertion_point(field_list:onnx.AttributeProto.tensors)
  return tensors_;
}

// repeated .onnx.GraphProto graphs = 11;
int AttributeProto::graphs_size() const {
  return graphs_.size();
}
void AttributeProto::clear_graphs() {
  graphs_.Clear();
}
const ::onnx::GraphProto& AttributeProto::graphs(int index) const {
  // @@protoc_insertion_point(field_get:onnx.AttributeProto.graphs)
  return graphs_.Get(index);
}
::onnx::GraphProto* AttributeProto::mutable_graphs(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.AttributeProto.graphs)
  return graphs_.Mutable(index);
}
::onnx::GraphProto* AttributeProto::add_graphs() {
  // @@protoc_insertion_point(field_add:onnx.AttributeProto.graphs)
  return graphs_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::GraphProto >*
AttributeProto::mutable_graphs() {
  // @@protoc_insertion_point(field_mutable_list:onnx.AttributeProto.graphs)
  return &graphs_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::GraphProto >&
AttributeProto::graphs() const {
  // @@protoc_insertion_point(field_list:onnx.AttributeProto.graphs)
  return graphs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueInfoProto::kNameFieldNumber;
const int ValueInfoProto::kTypeFieldNumber;
const int ValueInfoProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueInfoProto::ValueInfoProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.ValueInfoProto)
}
ValueInfoProto::ValueInfoProto(const ValueInfoProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_doc_string()) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  if (from.has_type()) {
    type_ = new ::onnx::TypeProto(*from.type_);
  } else {
    type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:onnx.ValueInfoProto)
}

void ValueInfoProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

ValueInfoProto::~ValueInfoProto() {
  // @@protoc_insertion_point(destructor:onnx.ValueInfoProto)
  SharedDtor();
}

void ValueInfoProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void ValueInfoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueInfoProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValueInfoProto& ValueInfoProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

ValueInfoProto* ValueInfoProto::New(::google::protobuf::Arena* arena) const {
  ValueInfoProto* n = new ValueInfoProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.ValueInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!doc_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*doc_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(type_ != NULL);
      type_->::onnx::TypeProto::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ValueInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.ValueInfoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.ValueInfoProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.TypeProto type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string doc_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.ValueInfoProto.doc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.ValueInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.ValueInfoProto)
  return false;
#undef DO_
}

void ValueInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.ValueInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ValueInfoProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .onnx.TypeProto type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_, output);
  }

  // optional string doc_string = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ValueInfoProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.ValueInfoProto)
}

::google::protobuf::uint8* ValueInfoProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ValueInfoProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ValueInfoProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .onnx.TypeProto type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_, deterministic, target);
  }

  // optional string doc_string = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ValueInfoProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ValueInfoProto)
  return target;
}

size_t ValueInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.ValueInfoProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string doc_string = 3;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional .onnx.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->type_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueInfoProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.ValueInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ValueInfoProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueInfoProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.ValueInfoProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.ValueInfoProto)
    MergeFrom(*source);
  }
}

void ValueInfoProto::MergeFrom(const ValueInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.ValueInfoProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_type()->::onnx::TypeProto::MergeFrom(from.type());
    }
  }
}

void ValueInfoProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.ValueInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueInfoProto::CopyFrom(const ValueInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.ValueInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValueInfoProto::IsInitialized() const {
  return true;
}

void ValueInfoProto::Swap(ValueInfoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueInfoProto::InternalSwap(ValueInfoProto* other) {
  using std::swap;
  name_.Swap(&other->name_);
  doc_string_.Swap(&other->doc_string_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueInfoProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueInfoProto

// optional string name = 1;
bool ValueInfoProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ValueInfoProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ValueInfoProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ValueInfoProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ValueInfoProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.ValueInfoProto.name)
  return name_.GetNoArena();
}
void ValueInfoProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.ValueInfoProto.name)
}
#if LANG_CXX11
void ValueInfoProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.ValueInfoProto.name)
}
#endif
void ValueInfoProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.ValueInfoProto.name)
}
void ValueInfoProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.ValueInfoProto.name)
}
::std::string* ValueInfoProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.ValueInfoProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ValueInfoProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.ValueInfoProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ValueInfoProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.ValueInfoProto.name)
}

// optional .onnx.TypeProto type = 2;
bool ValueInfoProto::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ValueInfoProto::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ValueInfoProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ValueInfoProto::clear_type() {
  if (type_ != NULL) type_->::onnx::TypeProto::Clear();
  clear_has_type();
}
const ::onnx::TypeProto& ValueInfoProto::type() const {
  const ::onnx::TypeProto* p = type_;
  // @@protoc_insertion_point(field_get:onnx.ValueInfoProto.type)
  return p != NULL ? *p : *reinterpret_cast<const ::onnx::TypeProto*>(
      &::onnx::_TypeProto_default_instance_);
}
::onnx::TypeProto* ValueInfoProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::onnx::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:onnx.ValueInfoProto.type)
  return type_;
}
::onnx::TypeProto* ValueInfoProto::release_type() {
  // @@protoc_insertion_point(field_release:onnx.ValueInfoProto.type)
  clear_has_type();
  ::onnx::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
void ValueInfoProto::set_allocated_type(::onnx::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.ValueInfoProto.type)
}

// optional string doc_string = 3;
bool ValueInfoProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ValueInfoProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000002u;
}
void ValueInfoProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000002u;
}
void ValueInfoProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& ValueInfoProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.ValueInfoProto.doc_string)
  return doc_string_.GetNoArena();
}
void ValueInfoProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.ValueInfoProto.doc_string)
}
#if LANG_CXX11
void ValueInfoProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.ValueInfoProto.doc_string)
}
#endif
void ValueInfoProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.ValueInfoProto.doc_string)
}
void ValueInfoProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.ValueInfoProto.doc_string)
}
::std::string* ValueInfoProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.ValueInfoProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ValueInfoProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.ValueInfoProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ValueInfoProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.ValueInfoProto.doc_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeProto::kInputFieldNumber;
const int NodeProto::kOutputFieldNumber;
const int NodeProto::kNameFieldNumber;
const int NodeProto::kOpTypeFieldNumber;
const int NodeProto::kDomainFieldNumber;
const int NodeProto::kAttributeFieldNumber;
const int NodeProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeProto::NodeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.NodeProto)
}
NodeProto::NodeProto(const NodeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      input_(from.input_),
      output_(from.output_),
      attribute_(from.attribute_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_op_type()) {
    op_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_doc_string()) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  // @@protoc_insertion_point(copy_constructor:onnx.NodeProto)
}

void NodeProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NodeProto::~NodeProto() {
  // @@protoc_insertion_point(destructor:onnx.NodeProto)
  SharedDtor();
}

void NodeProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeProto& NodeProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeProto* NodeProto::New(::google::protobuf::Arena* arena) const {
  NodeProto* n = new NodeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.NodeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  output_.Clear();
  attribute_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!op_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*op_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!doc_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*doc_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!domain_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*domain_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NodeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.NodeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input(this->input_size() - 1).data(),
            static_cast<int>(this->input(this->input_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.NodeProto.input");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output(this->output_size() - 1).data(),
            static_cast<int>(this->output(this->output_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.NodeProto.output");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.NodeProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string op_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_type().data(), static_cast<int>(this->op_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.NodeProto.op_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.AttributeProto attribute = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.NodeProto.doc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string domain = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.NodeProto.domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.NodeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.NodeProto)
  return false;
#undef DO_
}

void NodeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.NodeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input = 1;
  for (int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), static_cast<int>(this->input(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.input");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->input(i), output);
  }

  // repeated string output = 2;
  for (int i = 0, n = this->output_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), static_cast<int>(this->output(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.output");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->output(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string op_type = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->op_type(), output);
  }

  // repeated .onnx.AttributeProto attribute = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->attribute(static_cast<int>(i)), output);
  }

  // optional string doc_string = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional string domain = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->domain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.NodeProto)
}

::google::protobuf::uint8* NodeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.NodeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string input = 1;
  for (int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), static_cast<int>(this->input(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.input");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->input(i), target);
  }

  // repeated string output = 2;
  for (int i = 0, n = this->output_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), static_cast<int>(this->output(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.output");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->output(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string op_type = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), static_cast<int>(this->op_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->op_type(), target);
  }

  // repeated .onnx.AttributeProto attribute = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->attribute(static_cast<int>(i)), deterministic, target);
  }

  // optional string doc_string = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional string domain = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.NodeProto.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->domain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.NodeProto)
  return target;
}

size_t NodeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.NodeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string input = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (int i = 0, n = this->input_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input(i));
  }

  // repeated string output = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_size());
  for (int i = 0, n = this->output_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output(i));
  }

  // repeated .onnx.AttributeProto attribute = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->attribute_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attribute(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string op_type = 4;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_type());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional string domain = 7;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.NodeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.NodeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.NodeProto)
    MergeFrom(*source);
  }
}

void NodeProto::MergeFrom(const NodeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.NodeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
  output_.MergeFrom(from.output_);
  attribute_.MergeFrom(from.attribute_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_op_type();
      op_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
  }
}

void NodeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.NodeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeProto::CopyFrom(const NodeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.NodeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeProto::IsInitialized() const {
  return true;
}

void NodeProto::Swap(NodeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeProto::InternalSwap(NodeProto* other) {
  using std::swap;
  input_.InternalSwap(&other->input_);
  output_.InternalSwap(&other->output_);
  attribute_.InternalSwap(&other->attribute_);
  name_.Swap(&other->name_);
  op_type_.Swap(&other->op_type_);
  doc_string_.Swap(&other->doc_string_);
  domain_.Swap(&other->domain_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeProto

// repeated string input = 1;
int NodeProto::input_size() const {
  return input_.size();
}
void NodeProto::clear_input() {
  input_.Clear();
}
const ::std::string& NodeProto::input(int index) const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.input)
  return input_.Get(index);
}
::std::string* NodeProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.input)
  return input_.Mutable(index);
}
void NodeProto::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.NodeProto.input)
  input_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void NodeProto::set_input(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:onnx.NodeProto.input)
  input_.Mutable(index)->assign(std::move(value));
}
#endif
void NodeProto::set_input(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.NodeProto.input)
}
void NodeProto::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.NodeProto.input)
}
::std::string* NodeProto::add_input() {
  // @@protoc_insertion_point(field_add_mutable:onnx.NodeProto.input)
  return input_.Add();
}
void NodeProto::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.NodeProto.input)
}
#if LANG_CXX11
void NodeProto::add_input(::std::string&& value) {
  input_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:onnx.NodeProto.input)
}
#endif
void NodeProto::add_input(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.NodeProto.input)
}
void NodeProto::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.NodeProto.input)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::input() const {
  // @@protoc_insertion_point(field_list:onnx.NodeProto.input)
  return input_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:onnx.NodeProto.input)
  return &input_;
}

// repeated string output = 2;
int NodeProto::output_size() const {
  return output_.size();
}
void NodeProto::clear_output() {
  output_.Clear();
}
const ::std::string& NodeProto::output(int index) const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.output)
  return output_.Get(index);
}
::std::string* NodeProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.output)
  return output_.Mutable(index);
}
void NodeProto::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.NodeProto.output)
  output_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void NodeProto::set_output(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:onnx.NodeProto.output)
  output_.Mutable(index)->assign(std::move(value));
}
#endif
void NodeProto::set_output(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.NodeProto.output)
}
void NodeProto::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.NodeProto.output)
}
::std::string* NodeProto::add_output() {
  // @@protoc_insertion_point(field_add_mutable:onnx.NodeProto.output)
  return output_.Add();
}
void NodeProto::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.NodeProto.output)
}
#if LANG_CXX11
void NodeProto::add_output(::std::string&& value) {
  output_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:onnx.NodeProto.output)
}
#endif
void NodeProto::add_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.NodeProto.output)
}
void NodeProto::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.NodeProto.output)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::output() const {
  // @@protoc_insertion_point(field_list:onnx.NodeProto.output)
  return output_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:onnx.NodeProto.output)
  return &output_;
}

// optional string name = 3;
bool NodeProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NodeProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void NodeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void NodeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& NodeProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.name)
  return name_.GetNoArena();
}
void NodeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.NodeProto.name)
}
#if LANG_CXX11
void NodeProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.NodeProto.name)
}
#endif
void NodeProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.NodeProto.name)
}
void NodeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.NodeProto.name)
}
::std::string* NodeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.NodeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.NodeProto.name)
}

// optional string op_type = 4;
bool NodeProto::has_op_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NodeProto::set_has_op_type() {
  _has_bits_[0] |= 0x00000002u;
}
void NodeProto::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void NodeProto::clear_op_type() {
  op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_type();
}
const ::std::string& NodeProto::op_type() const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.op_type)
  return op_type_.GetNoArena();
}
void NodeProto::set_op_type(const ::std::string& value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.NodeProto.op_type)
}
#if LANG_CXX11
void NodeProto::set_op_type(::std::string&& value) {
  set_has_op_type();
  op_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.NodeProto.op_type)
}
#endif
void NodeProto::set_op_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.NodeProto.op_type)
}
void NodeProto::set_op_type(const char* value, size_t size) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.NodeProto.op_type)
}
::std::string* NodeProto::mutable_op_type() {
  set_has_op_type();
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.op_type)
  return op_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_op_type() {
  // @@protoc_insertion_point(field_release:onnx.NodeProto.op_type)
  clear_has_op_type();
  return op_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    set_has_op_type();
  } else {
    clear_has_op_type();
  }
  op_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type);
  // @@protoc_insertion_point(field_set_allocated:onnx.NodeProto.op_type)
}

// optional string domain = 7;
bool NodeProto::has_domain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NodeProto::set_has_domain() {
  _has_bits_[0] |= 0x00000008u;
}
void NodeProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000008u;
}
void NodeProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& NodeProto::domain() const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.domain)
  return domain_.GetNoArena();
}
void NodeProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.NodeProto.domain)
}
#if LANG_CXX11
void NodeProto::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.NodeProto.domain)
}
#endif
void NodeProto::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.NodeProto.domain)
}
void NodeProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.NodeProto.domain)
}
::std::string* NodeProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_domain() {
  // @@protoc_insertion_point(field_release:onnx.NodeProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:onnx.NodeProto.domain)
}

// repeated .onnx.AttributeProto attribute = 5;
int NodeProto::attribute_size() const {
  return attribute_.size();
}
void NodeProto::clear_attribute() {
  attribute_.Clear();
}
const ::onnx::AttributeProto& NodeProto::attribute(int index) const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.attribute)
  return attribute_.Get(index);
}
::onnx::AttributeProto* NodeProto::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.attribute)
  return attribute_.Mutable(index);
}
::onnx::AttributeProto* NodeProto::add_attribute() {
  // @@protoc_insertion_point(field_add:onnx.NodeProto.attribute)
  return attribute_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::AttributeProto >*
NodeProto::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:onnx.NodeProto.attribute)
  return &attribute_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::AttributeProto >&
NodeProto::attribute() const {
  // @@protoc_insertion_point(field_list:onnx.NodeProto.attribute)
  return attribute_;
}

// optional string doc_string = 6;
bool NodeProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NodeProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
void NodeProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
void NodeProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& NodeProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.NodeProto.doc_string)
  return doc_string_.GetNoArena();
}
void NodeProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.NodeProto.doc_string)
}
#if LANG_CXX11
void NodeProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.NodeProto.doc_string)
}
#endif
void NodeProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.NodeProto.doc_string)
}
void NodeProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.NodeProto.doc_string)
}
::std::string* NodeProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.NodeProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.NodeProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.NodeProto.doc_string)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelProto::kIrVersionFieldNumber;
const int ModelProto::kOpsetImportFieldNumber;
const int ModelProto::kProducerNameFieldNumber;
const int ModelProto::kProducerVersionFieldNumber;
const int ModelProto::kDomainFieldNumber;
const int ModelProto::kModelVersionFieldNumber;
const int ModelProto::kDocStringFieldNumber;
const int ModelProto::kGraphFieldNumber;
const int ModelProto::kMetadataPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelProto::ModelProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.ModelProto)
}
ModelProto::ModelProto(const ModelProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      opset_import_(from.opset_import_),
      metadata_props_(from.metadata_props_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_producer_name()) {
    producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
  }
  producer_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_producer_version()) {
    producer_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_version_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_doc_string()) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  if (from.has_graph()) {
    graph_ = new ::onnx::GraphProto(*from.graph_);
  } else {
    graph_ = NULL;
  }
  ::memcpy(&ir_version_, &from.ir_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&model_version_) -
    reinterpret_cast<char*>(&ir_version_)) + sizeof(model_version_));
  // @@protoc_insertion_point(copy_constructor:onnx.ModelProto)
}

void ModelProto::SharedCtor() {
  _cached_size_ = 0;
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&graph_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_version_) -
      reinterpret_cast<char*>(&graph_)) + sizeof(model_version_));
}

ModelProto::~ModelProto() {
  // @@protoc_insertion_point(destructor:onnx.ModelProto)
  SharedDtor();
}

void ModelProto::SharedDtor() {
  producer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete graph_;
}

void ModelProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelProto& ModelProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModelProto* ModelProto::New(::google::protobuf::Arena* arena) const {
  ModelProto* n = new ModelProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.ModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opset_import_.Clear();
  metadata_props_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!producer_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*producer_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!producer_version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*producer_version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!domain_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*domain_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!doc_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*doc_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(graph_ != NULL);
      graph_->::onnx::GraphProto::Clear();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&ir_version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&model_version_) -
        reinterpret_cast<char*>(&ir_version_)) + sizeof(model_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ModelProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.ModelProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ir_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ir_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ir_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string producer_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_name().data(), static_cast<int>(this->producer_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.ModelProto.producer_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string producer_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_version().data(), static_cast<int>(this->producer_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.ModelProto.producer_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string domain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.ModelProto.domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 model_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_model_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &model_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.ModelProto.doc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.GraphProto graph = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.OperatorSetIdProto opset_import = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_opset_import()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.StringStringEntryProto metadata_props = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_metadata_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.ModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.ModelProto)
  return false;
#undef DO_
}

void ModelProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.ModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 ir_version = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ir_version(), output);
  }

  // optional string producer_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_name().data(), static_cast<int>(this->producer_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.producer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->producer_name(), output);
  }

  // optional string producer_version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_version().data(), static_cast<int>(this->producer_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.producer_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->producer_version(), output);
  }

  // optional string domain = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // optional int64 model_version = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->model_version(), output);
  }

  // optional string doc_string = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional .onnx.GraphProto graph = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->graph_, output);
  }

  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opset_import_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->opset_import(static_cast<int>(i)), output);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_props_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->metadata_props(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.ModelProto)
}

::google::protobuf::uint8* ModelProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.ModelProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 ir_version = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ir_version(), target);
  }

  // optional string producer_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_name().data(), static_cast<int>(this->producer_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.producer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->producer_name(), target);
  }

  // optional string producer_version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_version().data(), static_cast<int>(this->producer_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.producer_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->producer_version(), target);
  }

  // optional string domain = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // optional int64 model_version = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->model_version(), target);
  }

  // optional string doc_string = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.ModelProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional .onnx.GraphProto graph = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->graph_, deterministic, target);
  }

  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->opset_import_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->opset_import(static_cast<int>(i)), deterministic, target);
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_props_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->metadata_props(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.ModelProto)
  return target;
}

size_t ModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.ModelProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .onnx.OperatorSetIdProto opset_import = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->opset_import_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->opset_import(static_cast<int>(i)));
    }
  }

  // repeated .onnx.StringStringEntryProto metadata_props = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_props_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata_props(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string producer_name = 2;
    if (has_producer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_name());
    }

    // optional string producer_version = 3;
    if (has_producer_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_version());
    }

    // optional string domain = 4;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional .onnx.GraphProto graph = 7;
    if (has_graph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->graph_);
    }

    // optional int64 ir_version = 1;
    if (has_ir_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ir_version());
    }

    // optional int64 model_version = 5;
    if (has_model_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->model_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.ModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.ModelProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.ModelProto)
    MergeFrom(*source);
  }
}

void ModelProto::MergeFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.ModelProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  opset_import_.MergeFrom(from.opset_import_);
  metadata_props_.MergeFrom(from.metadata_props_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_producer_name();
      producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_producer_version();
      producer_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_graph()->::onnx::GraphProto::MergeFrom(from.graph());
    }
    if (cached_has_bits & 0x00000020u) {
      ir_version_ = from.ir_version_;
    }
    if (cached_has_bits & 0x00000040u) {
      model_version_ = from.model_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModelProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto::CopyFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelProto::IsInitialized() const {
  return true;
}

void ModelProto::Swap(ModelProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelProto::InternalSwap(ModelProto* other) {
  using std::swap;
  opset_import_.InternalSwap(&other->opset_import_);
  metadata_props_.InternalSwap(&other->metadata_props_);
  producer_name_.Swap(&other->producer_name_);
  producer_version_.Swap(&other->producer_version_);
  domain_.Swap(&other->domain_);
  doc_string_.Swap(&other->doc_string_);
  swap(graph_, other->graph_);
  swap(ir_version_, other->ir_version_);
  swap(model_version_, other->model_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelProto

// optional int64 ir_version = 1;
bool ModelProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ModelProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000020u;
}
void ModelProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void ModelProto::clear_ir_version() {
  ir_version_ = GOOGLE_LONGLONG(0);
  clear_has_ir_version();
}
::google::protobuf::int64 ModelProto::ir_version() const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.ir_version)
  return ir_version_;
}
void ModelProto::set_ir_version(::google::protobuf::int64 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.ModelProto.ir_version)
}

// repeated .onnx.OperatorSetIdProto opset_import = 8;
int ModelProto::opset_import_size() const {
  return opset_import_.size();
}
void ModelProto::clear_opset_import() {
  opset_import_.Clear();
}
const ::onnx::OperatorSetIdProto& ModelProto::opset_import(int index) const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.opset_import)
  return opset_import_.Get(index);
}
::onnx::OperatorSetIdProto* ModelProto::mutable_opset_import(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.opset_import)
  return opset_import_.Mutable(index);
}
::onnx::OperatorSetIdProto* ModelProto::add_opset_import() {
  // @@protoc_insertion_point(field_add:onnx.ModelProto.opset_import)
  return opset_import_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::OperatorSetIdProto >*
ModelProto::mutable_opset_import() {
  // @@protoc_insertion_point(field_mutable_list:onnx.ModelProto.opset_import)
  return &opset_import_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::OperatorSetIdProto >&
ModelProto::opset_import() const {
  // @@protoc_insertion_point(field_list:onnx.ModelProto.opset_import)
  return opset_import_;
}

// optional string producer_name = 2;
bool ModelProto::has_producer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ModelProto::set_has_producer_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ModelProto::clear_has_producer_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ModelProto::clear_producer_name() {
  producer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_name();
}
const ::std::string& ModelProto::producer_name() const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.producer_name)
  return producer_name_.GetNoArena();
}
void ModelProto::set_producer_name(const ::std::string& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.ModelProto.producer_name)
}
#if LANG_CXX11
void ModelProto::set_producer_name(::std::string&& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.ModelProto.producer_name)
}
#endif
void ModelProto::set_producer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.ModelProto.producer_name)
}
void ModelProto::set_producer_name(const char* value, size_t size) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.ModelProto.producer_name)
}
::std::string* ModelProto::mutable_producer_name() {
  set_has_producer_name();
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.producer_name)
  return producer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_producer_name() {
  // @@protoc_insertion_point(field_release:onnx.ModelProto.producer_name)
  clear_has_producer_name();
  return producer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_producer_name(::std::string* producer_name) {
  if (producer_name != NULL) {
    set_has_producer_name();
  } else {
    clear_has_producer_name();
  }
  producer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_name);
  // @@protoc_insertion_point(field_set_allocated:onnx.ModelProto.producer_name)
}

// optional string producer_version = 3;
bool ModelProto::has_producer_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ModelProto::set_has_producer_version() {
  _has_bits_[0] |= 0x00000002u;
}
void ModelProto::clear_has_producer_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void ModelProto::clear_producer_version() {
  producer_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_version();
}
const ::std::string& ModelProto::producer_version() const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.producer_version)
  return producer_version_.GetNoArena();
}
void ModelProto::set_producer_version(const ::std::string& value) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.ModelProto.producer_version)
}
#if LANG_CXX11
void ModelProto::set_producer_version(::std::string&& value) {
  set_has_producer_version();
  producer_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.ModelProto.producer_version)
}
#endif
void ModelProto::set_producer_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.ModelProto.producer_version)
}
void ModelProto::set_producer_version(const char* value, size_t size) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.ModelProto.producer_version)
}
::std::string* ModelProto::mutable_producer_version() {
  set_has_producer_version();
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.producer_version)
  return producer_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_producer_version() {
  // @@protoc_insertion_point(field_release:onnx.ModelProto.producer_version)
  clear_has_producer_version();
  return producer_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_producer_version(::std::string* producer_version) {
  if (producer_version != NULL) {
    set_has_producer_version();
  } else {
    clear_has_producer_version();
  }
  producer_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_version);
  // @@protoc_insertion_point(field_set_allocated:onnx.ModelProto.producer_version)
}

// optional string domain = 4;
bool ModelProto::has_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ModelProto::set_has_domain() {
  _has_bits_[0] |= 0x00000004u;
}
void ModelProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000004u;
}
void ModelProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& ModelProto::domain() const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.domain)
  return domain_.GetNoArena();
}
void ModelProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.ModelProto.domain)
}
#if LANG_CXX11
void ModelProto::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.ModelProto.domain)
}
#endif
void ModelProto::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.ModelProto.domain)
}
void ModelProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.ModelProto.domain)
}
::std::string* ModelProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_domain() {
  // @@protoc_insertion_point(field_release:onnx.ModelProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:onnx.ModelProto.domain)
}

// optional int64 model_version = 5;
bool ModelProto::has_model_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ModelProto::set_has_model_version() {
  _has_bits_[0] |= 0x00000040u;
}
void ModelProto::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000040u;
}
void ModelProto::clear_model_version() {
  model_version_ = GOOGLE_LONGLONG(0);
  clear_has_model_version();
}
::google::protobuf::int64 ModelProto::model_version() const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.model_version)
  return model_version_;
}
void ModelProto::set_model_version(::google::protobuf::int64 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.ModelProto.model_version)
}

// optional string doc_string = 6;
bool ModelProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ModelProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
void ModelProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
void ModelProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& ModelProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.doc_string)
  return doc_string_.GetNoArena();
}
void ModelProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.ModelProto.doc_string)
}
#if LANG_CXX11
void ModelProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.ModelProto.doc_string)
}
#endif
void ModelProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.ModelProto.doc_string)
}
void ModelProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.ModelProto.doc_string)
}
::std::string* ModelProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.ModelProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.ModelProto.doc_string)
}

// optional .onnx.GraphProto graph = 7;
bool ModelProto::has_graph() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ModelProto::set_has_graph() {
  _has_bits_[0] |= 0x00000010u;
}
void ModelProto::clear_has_graph() {
  _has_bits_[0] &= ~0x00000010u;
}
void ModelProto::clear_graph() {
  if (graph_ != NULL) graph_->::onnx::GraphProto::Clear();
  clear_has_graph();
}
const ::onnx::GraphProto& ModelProto::graph() const {
  const ::onnx::GraphProto* p = graph_;
  // @@protoc_insertion_point(field_get:onnx.ModelProto.graph)
  return p != NULL ? *p : *reinterpret_cast<const ::onnx::GraphProto*>(
      &::onnx::_GraphProto_default_instance_);
}
::onnx::GraphProto* ModelProto::mutable_graph() {
  set_has_graph();
  if (graph_ == NULL) {
    graph_ = new ::onnx::GraphProto;
  }
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.graph)
  return graph_;
}
::onnx::GraphProto* ModelProto::release_graph() {
  // @@protoc_insertion_point(field_release:onnx.ModelProto.graph)
  clear_has_graph();
  ::onnx::GraphProto* temp = graph_;
  graph_ = NULL;
  return temp;
}
void ModelProto::set_allocated_graph(::onnx::GraphProto* graph) {
  delete graph_;
  graph_ = graph;
  if (graph) {
    set_has_graph();
  } else {
    clear_has_graph();
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.ModelProto.graph)
}

// repeated .onnx.StringStringEntryProto metadata_props = 14;
int ModelProto::metadata_props_size() const {
  return metadata_props_.size();
}
void ModelProto::clear_metadata_props() {
  metadata_props_.Clear();
}
const ::onnx::StringStringEntryProto& ModelProto::metadata_props(int index) const {
  // @@protoc_insertion_point(field_get:onnx.ModelProto.metadata_props)
  return metadata_props_.Get(index);
}
::onnx::StringStringEntryProto* ModelProto::mutable_metadata_props(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.ModelProto.metadata_props)
  return metadata_props_.Mutable(index);
}
::onnx::StringStringEntryProto* ModelProto::add_metadata_props() {
  // @@protoc_insertion_point(field_add:onnx.ModelProto.metadata_props)
  return metadata_props_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::StringStringEntryProto >*
ModelProto::mutable_metadata_props() {
  // @@protoc_insertion_point(field_mutable_list:onnx.ModelProto.metadata_props)
  return &metadata_props_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::StringStringEntryProto >&
ModelProto::metadata_props() const {
  // @@protoc_insertion_point(field_list:onnx.ModelProto.metadata_props)
  return metadata_props_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringStringEntryProto::kKeyFieldNumber;
const int StringStringEntryProto::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringStringEntryProto::StringStringEntryProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.StringStringEntryProto)
}
StringStringEntryProto::StringStringEntryProto(const StringStringEntryProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:onnx.StringStringEntryProto)
}

void StringStringEntryProto::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StringStringEntryProto::~StringStringEntryProto() {
  // @@protoc_insertion_point(destructor:onnx.StringStringEntryProto)
  SharedDtor();
}

void StringStringEntryProto::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StringStringEntryProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringStringEntryProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringStringEntryProto& StringStringEntryProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringStringEntryProto* StringStringEntryProto::New(::google::protobuf::Arena* arena) const {
  StringStringEntryProto* n = new StringStringEntryProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringStringEntryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.StringStringEntryProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StringStringEntryProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.StringStringEntryProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.StringStringEntryProto.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.StringStringEntryProto.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.StringStringEntryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.StringStringEntryProto)
  return false;
#undef DO_
}

void StringStringEntryProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.StringStringEntryProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.StringStringEntryProto.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.StringStringEntryProto.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.StringStringEntryProto)
}

::google::protobuf::uint8* StringStringEntryProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.StringStringEntryProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.StringStringEntryProto.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.StringStringEntryProto.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.StringStringEntryProto)
  return target;
}

size_t StringStringEntryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.StringStringEntryProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringStringEntryProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.StringStringEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  const StringStringEntryProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringStringEntryProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.StringStringEntryProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.StringStringEntryProto)
    MergeFrom(*source);
  }
}

void StringStringEntryProto::MergeFrom(const StringStringEntryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.StringStringEntryProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void StringStringEntryProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.StringStringEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringStringEntryProto::CopyFrom(const StringStringEntryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.StringStringEntryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringStringEntryProto::IsInitialized() const {
  return true;
}

void StringStringEntryProto::Swap(StringStringEntryProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringStringEntryProto::InternalSwap(StringStringEntryProto* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringStringEntryProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringStringEntryProto

// optional string key = 1;
bool StringStringEntryProto::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StringStringEntryProto::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void StringStringEntryProto::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void StringStringEntryProto::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& StringStringEntryProto::key() const {
  // @@protoc_insertion_point(field_get:onnx.StringStringEntryProto.key)
  return key_.GetNoArena();
}
void StringStringEntryProto::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.StringStringEntryProto.key)
}
#if LANG_CXX11
void StringStringEntryProto::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.StringStringEntryProto.key)
}
#endif
void StringStringEntryProto::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.StringStringEntryProto.key)
}
void StringStringEntryProto::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.StringStringEntryProto.key)
}
::std::string* StringStringEntryProto::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:onnx.StringStringEntryProto.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringStringEntryProto::release_key() {
  // @@protoc_insertion_point(field_release:onnx.StringStringEntryProto.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringStringEntryProto::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:onnx.StringStringEntryProto.key)
}

// optional string value = 2;
bool StringStringEntryProto::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StringStringEntryProto::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void StringStringEntryProto::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void StringStringEntryProto::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& StringStringEntryProto::value() const {
  // @@protoc_insertion_point(field_get:onnx.StringStringEntryProto.value)
  return value_.GetNoArena();
}
void StringStringEntryProto::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.StringStringEntryProto.value)
}
#if LANG_CXX11
void StringStringEntryProto::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.StringStringEntryProto.value)
}
#endif
void StringStringEntryProto::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.StringStringEntryProto.value)
}
void StringStringEntryProto::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.StringStringEntryProto.value)
}
::std::string* StringStringEntryProto::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:onnx.StringStringEntryProto.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StringStringEntryProto::release_value() {
  // @@protoc_insertion_point(field_release:onnx.StringStringEntryProto.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StringStringEntryProto::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:onnx.StringStringEntryProto.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphProto::kNodeFieldNumber;
const int GraphProto::kNameFieldNumber;
const int GraphProto::kInitializerFieldNumber;
const int GraphProto::kDocStringFieldNumber;
const int GraphProto::kInputFieldNumber;
const int GraphProto::kOutputFieldNumber;
const int GraphProto::kValueInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphProto::GraphProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.GraphProto)
}
GraphProto::GraphProto(const GraphProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      node_(from.node_),
      initializer_(from.initializer_),
      input_(from.input_),
      output_(from.output_),
      value_info_(from.value_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_doc_string()) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  // @@protoc_insertion_point(copy_constructor:onnx.GraphProto)
}

void GraphProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GraphProto::~GraphProto() {
  // @@protoc_insertion_point(destructor:onnx.GraphProto)
  SharedDtor();
}

void GraphProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GraphProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphProto& GraphProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

GraphProto* GraphProto::New(::google::protobuf::Arena* arena) const {
  GraphProto* n = new GraphProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GraphProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.GraphProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_.Clear();
  initializer_.Clear();
  input_.Clear();
  output_.Clear();
  value_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!doc_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*doc_string_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GraphProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.GraphProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .onnx.NodeProto node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.GraphProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.TensorProto initializer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_initializer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string doc_string = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.GraphProto.doc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.ValueInfoProto input = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.ValueInfoProto output = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .onnx.ValueInfoProto value_info = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_value_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.GraphProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.GraphProto)
  return false;
#undef DO_
}

void GraphProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.GraphProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onnx.NodeProto node = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.GraphProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .onnx.TensorProto initializer = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initializer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->initializer(static_cast<int>(i)), output);
  }

  // optional string doc_string = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.GraphProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->doc_string(), output);
  }

  // repeated .onnx.ValueInfoProto input = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->input(static_cast<int>(i)), output);
  }

  // repeated .onnx.ValueInfoProto output = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->output(static_cast<int>(i)), output);
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->value_info(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.GraphProto)
}

::google::protobuf::uint8* GraphProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.GraphProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onnx.NodeProto node = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->node(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.GraphProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .onnx.TensorProto initializer = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->initializer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->initializer(static_cast<int>(i)), deterministic, target);
  }

  // optional string doc_string = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.GraphProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->doc_string(), target);
  }

  // repeated .onnx.ValueInfoProto input = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->input(static_cast<int>(i)), deterministic, target);
  }

  // repeated .onnx.ValueInfoProto output = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->output_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->output(static_cast<int>(i)), deterministic, target);
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->value_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->value_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.GraphProto)
  return target;
}

size_t GraphProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.GraphProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .onnx.NodeProto node = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->node_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node(static_cast<int>(i)));
    }
  }

  // repeated .onnx.TensorProto initializer = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->initializer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initializer(static_cast<int>(i)));
    }
  }

  // repeated .onnx.ValueInfoProto input = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->input_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input(static_cast<int>(i)));
    }
  }

  // repeated .onnx.ValueInfoProto output = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->output_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output(static_cast<int>(i)));
    }
  }

  // repeated .onnx.ValueInfoProto value_info = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->value_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value_info(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string doc_string = 10;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.GraphProto)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.GraphProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.GraphProto)
    MergeFrom(*source);
  }
}

void GraphProto::MergeFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.GraphProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_.MergeFrom(from.node_);
  initializer_.MergeFrom(from.initializer_);
  input_.MergeFrom(from.input_);
  output_.MergeFrom(from.output_);
  value_info_.MergeFrom(from.value_info_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
}

void GraphProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphProto::CopyFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphProto::IsInitialized() const {
  return true;
}

void GraphProto::Swap(GraphProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphProto::InternalSwap(GraphProto* other) {
  using std::swap;
  node_.InternalSwap(&other->node_);
  initializer_.InternalSwap(&other->initializer_);
  input_.InternalSwap(&other->input_);
  output_.InternalSwap(&other->output_);
  value_info_.InternalSwap(&other->value_info_);
  name_.Swap(&other->name_);
  doc_string_.Swap(&other->doc_string_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GraphProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GraphProto

// repeated .onnx.NodeProto node = 1;
int GraphProto::node_size() const {
  return node_.size();
}
void GraphProto::clear_node() {
  node_.Clear();
}
const ::onnx::NodeProto& GraphProto::node(int index) const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.node)
  return node_.Get(index);
}
::onnx::NodeProto* GraphProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.node)
  return node_.Mutable(index);
}
::onnx::NodeProto* GraphProto::add_node() {
  // @@protoc_insertion_point(field_add:onnx.GraphProto.node)
  return node_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >*
GraphProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:onnx.GraphProto.node)
  return &node_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >&
GraphProto::node() const {
  // @@protoc_insertion_point(field_list:onnx.GraphProto.node)
  return node_;
}

// optional string name = 2;
bool GraphProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GraphProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void GraphProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void GraphProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& GraphProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.name)
  return name_.GetNoArena();
}
void GraphProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.GraphProto.name)
}
#if LANG_CXX11
void GraphProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.GraphProto.name)
}
#endif
void GraphProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.GraphProto.name)
}
void GraphProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.GraphProto.name)
}
::std::string* GraphProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GraphProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.GraphProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GraphProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.GraphProto.name)
}

// repeated .onnx.TensorProto initializer = 5;
int GraphProto::initializer_size() const {
  return initializer_.size();
}
void GraphProto::clear_initializer() {
  initializer_.Clear();
}
const ::onnx::TensorProto& GraphProto::initializer(int index) const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.initializer)
  return initializer_.Get(index);
}
::onnx::TensorProto* GraphProto::mutable_initializer(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.initializer)
  return initializer_.Mutable(index);
}
::onnx::TensorProto* GraphProto::add_initializer() {
  // @@protoc_insertion_point(field_add:onnx.GraphProto.initializer)
  return initializer_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::TensorProto >*
GraphProto::mutable_initializer() {
  // @@protoc_insertion_point(field_mutable_list:onnx.GraphProto.initializer)
  return &initializer_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::TensorProto >&
GraphProto::initializer() const {
  // @@protoc_insertion_point(field_list:onnx.GraphProto.initializer)
  return initializer_;
}

// optional string doc_string = 10;
bool GraphProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GraphProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000002u;
}
void GraphProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000002u;
}
void GraphProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& GraphProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.doc_string)
  return doc_string_.GetNoArena();
}
void GraphProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.GraphProto.doc_string)
}
#if LANG_CXX11
void GraphProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.GraphProto.doc_string)
}
#endif
void GraphProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.GraphProto.doc_string)
}
void GraphProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.GraphProto.doc_string)
}
::std::string* GraphProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GraphProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.GraphProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GraphProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.GraphProto.doc_string)
}

// repeated .onnx.ValueInfoProto input = 11;
int GraphProto::input_size() const {
  return input_.size();
}
void GraphProto::clear_input() {
  input_.Clear();
}
const ::onnx::ValueInfoProto& GraphProto::input(int index) const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.input)
  return input_.Get(index);
}
::onnx::ValueInfoProto* GraphProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.input)
  return input_.Mutable(index);
}
::onnx::ValueInfoProto* GraphProto::add_input() {
  // @@protoc_insertion_point(field_add:onnx.GraphProto.input)
  return input_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::ValueInfoProto >*
GraphProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:onnx.GraphProto.input)
  return &input_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::ValueInfoProto >&
GraphProto::input() const {
  // @@protoc_insertion_point(field_list:onnx.GraphProto.input)
  return input_;
}

// repeated .onnx.ValueInfoProto output = 12;
int GraphProto::output_size() const {
  return output_.size();
}
void GraphProto::clear_output() {
  output_.Clear();
}
const ::onnx::ValueInfoProto& GraphProto::output(int index) const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.output)
  return output_.Get(index);
}
::onnx::ValueInfoProto* GraphProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.output)
  return output_.Mutable(index);
}
::onnx::ValueInfoProto* GraphProto::add_output() {
  // @@protoc_insertion_point(field_add:onnx.GraphProto.output)
  return output_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::ValueInfoProto >*
GraphProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:onnx.GraphProto.output)
  return &output_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::ValueInfoProto >&
GraphProto::output() const {
  // @@protoc_insertion_point(field_list:onnx.GraphProto.output)
  return output_;
}

// repeated .onnx.ValueInfoProto value_info = 13;
int GraphProto::value_info_size() const {
  return value_info_.size();
}
void GraphProto::clear_value_info() {
  value_info_.Clear();
}
const ::onnx::ValueInfoProto& GraphProto::value_info(int index) const {
  // @@protoc_insertion_point(field_get:onnx.GraphProto.value_info)
  return value_info_.Get(index);
}
::onnx::ValueInfoProto* GraphProto::mutable_value_info(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.GraphProto.value_info)
  return value_info_.Mutable(index);
}
::onnx::ValueInfoProto* GraphProto::add_value_info() {
  // @@protoc_insertion_point(field_add:onnx.GraphProto.value_info)
  return value_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::ValueInfoProto >*
GraphProto::mutable_value_info() {
  // @@protoc_insertion_point(field_mutable_list:onnx.GraphProto.value_info)
  return &value_info_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::ValueInfoProto >&
GraphProto::value_info() const {
  // @@protoc_insertion_point(field_list:onnx.GraphProto.value_info)
  return value_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorProto_Segment::kBeginFieldNumber;
const int TensorProto_Segment::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorProto_Segment::TensorProto_Segment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorProto.Segment)
}
TensorProto_Segment::TensorProto_Segment(const TensorProto_Segment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&begin_, &from.begin_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:onnx.TensorProto.Segment)
}

void TensorProto_Segment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&begin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&begin_)) + sizeof(end_));
}

TensorProto_Segment::~TensorProto_Segment() {
  // @@protoc_insertion_point(destructor:onnx.TensorProto.Segment)
  SharedDtor();
}

void TensorProto_Segment::SharedDtor() {
}

void TensorProto_Segment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorProto_Segment::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorProto_Segment& TensorProto_Segment::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorProto_Segment* TensorProto_Segment::New(::google::protobuf::Arena* arena) const {
  TensorProto_Segment* n = new TensorProto_Segment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorProto_Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorProto.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&begin_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&end_) -
        reinterpret_cast<char*>(&begin_)) + sizeof(end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TensorProto_Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorProto.Segment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 begin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_begin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorProto.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorProto.Segment)
  return false;
#undef DO_
}

void TensorProto_Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorProto.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 begin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->begin(), output);
  }

  // optional int64 end = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorProto.Segment)
}

::google::protobuf::uint8* TensorProto_Segment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorProto.Segment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 begin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->begin(), target);
  }

  // optional int64 end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorProto.Segment)
  return target;
}

size_t TensorProto_Segment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.TensorProto.Segment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 begin = 1;
    if (has_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begin());
    }

    // optional int64 end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorProto_Segment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.TensorProto.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorProto_Segment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorProto_Segment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.TensorProto.Segment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.TensorProto.Segment)
    MergeFrom(*source);
  }
}

void TensorProto_Segment::MergeFrom(const TensorProto_Segment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorProto.Segment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      begin_ = from.begin_;
    }
    if (cached_has_bits & 0x00000002u) {
      end_ = from.end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TensorProto_Segment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.TensorProto.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorProto_Segment::CopyFrom(const TensorProto_Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorProto.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorProto_Segment::IsInitialized() const {
  return true;
}

void TensorProto_Segment::Swap(TensorProto_Segment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorProto_Segment::InternalSwap(TensorProto_Segment* other) {
  using std::swap;
  swap(begin_, other->begin_);
  swap(end_, other->end_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorProto_Segment::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorProto_Segment

// optional int64 begin = 1;
bool TensorProto_Segment::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TensorProto_Segment::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
void TensorProto_Segment::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
void TensorProto_Segment::clear_begin() {
  begin_ = GOOGLE_LONGLONG(0);
  clear_has_begin();
}
::google::protobuf::int64 TensorProto_Segment::begin() const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.Segment.begin)
  return begin_;
}
void TensorProto_Segment::set_begin(::google::protobuf::int64 value) {
  set_has_begin();
  begin_ = value;
  // @@protoc_insertion_point(field_set:onnx.TensorProto.Segment.begin)
}

// optional int64 end = 2;
bool TensorProto_Segment::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TensorProto_Segment::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
void TensorProto_Segment::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
void TensorProto_Segment::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
  clear_has_end();
}
::google::protobuf::int64 TensorProto_Segment::end() const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.Segment.end)
  return end_;
}
void TensorProto_Segment::set_end(::google::protobuf::int64 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:onnx.TensorProto.Segment.end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorProto::kDimsFieldNumber;
const int TensorProto::kDataTypeFieldNumber;
const int TensorProto::kSegmentFieldNumber;
const int TensorProto::kFloatDataFieldNumber;
const int TensorProto::kInt32DataFieldNumber;
const int TensorProto::kStringDataFieldNumber;
const int TensorProto::kInt64DataFieldNumber;
const int TensorProto::kNameFieldNumber;
const int TensorProto::kDocStringFieldNumber;
const int TensorProto::kRawDataFieldNumber;
const int TensorProto::kDoubleDataFieldNumber;
const int TensorProto::kUint64DataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorProto::TensorProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorProto)
}
TensorProto::TensorProto(const TensorProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dims_(from.dims_),
      float_data_(from.float_data_),
      int32_data_(from.int32_data_),
      string_data_(from.string_data_),
      int64_data_(from.int64_data_),
      double_data_(from.double_data_),
      uint64_data_(from.uint64_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_raw_data()) {
    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_doc_string()) {
    doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
  }
  if (from.has_segment()) {
    segment_ = new ::onnx::TensorProto_Segment(*from.segment_);
  } else {
    segment_ = NULL;
  }
  data_type_ = from.data_type_;
  // @@protoc_insertion_point(copy_constructor:onnx.TensorProto)
}

void TensorProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&segment_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_type_) -
      reinterpret_cast<char*>(&segment_)) + sizeof(data_type_));
}

TensorProto::~TensorProto() {
  // @@protoc_insertion_point(destructor:onnx.TensorProto)
  SharedDtor();
}

void TensorProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete segment_;
}

void TensorProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorProto& TensorProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorProto* TensorProto::New(::google::protobuf::Arena* arena) const {
  TensorProto* n = new TensorProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dims_.Clear();
  float_data_.Clear();
  int32_data_.Clear();
  string_data_.Clear();
  int64_data_.Clear();
  double_data_.Clear();
  uint64_data_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!raw_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*raw_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!doc_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*doc_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(segment_ != NULL);
      segment_->::onnx::TensorProto_Segment::Clear();
    }
  }
  data_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TensorProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 dims = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8u, input, this->mutable_dims())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 data_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_data_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.TensorProto.Segment segment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float float_data = 4 [packed = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_float_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 int32_data = 5 [packed = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_int32_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes string_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_string_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 int64_data = 7 [packed = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 58u, input, this->mutable_int64_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.TensorProto.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes raw_data = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double double_data = 10 [packed = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 82u, input, this->mutable_double_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 uint64_data = 11 [packed = true];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uint64_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 90u, input, this->mutable_uint64_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string doc_string = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), static_cast<int>(this->doc_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.TensorProto.doc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorProto)
  return false;
#undef DO_
}

void TensorProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 dims = 1;
  for (int i = 0, n = this->dims_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->dims(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int32 data_type = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_type(), output);
  }

  // optional .onnx.TensorProto.Segment segment = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->segment_, output);
  }

  // repeated float float_data = 4 [packed = true];
  if (this->float_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _float_data_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->float_data().data(), this->float_data_size(), output);
  }

  // repeated int32 int32_data = 5 [packed = true];
  if (this->int32_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _int32_data_cached_byte_size_));
  }
  for (int i = 0, n = this->int32_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->int32_data(i), output);
  }

  // repeated bytes string_data = 6;
  for (int i = 0, n = this->string_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->string_data(i), output);
  }

  // repeated int64 int64_data = 7 [packed = true];
  if (this->int64_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _int64_data_cached_byte_size_));
  }
  for (int i = 0, n = this->int64_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->int64_data(i), output);
  }

  // optional string name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TensorProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // optional bytes raw_data = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->raw_data(), output);
  }

  // repeated double double_data = 10 [packed = true];
  if (this->double_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _double_data_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->double_data().data(), this->double_data_size(), output);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  if (this->uint64_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uint64_data_cached_byte_size_));
  }
  for (int i = 0, n = this->uint64_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->uint64_data(i), output);
  }

  // optional string doc_string = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TensorProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorProto)
}

::google::protobuf::uint8* TensorProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 dims = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(1, this->dims_, target);

  cached_has_bits = _has_bits_[0];
  // optional int32 data_type = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_type(), target);
  }

  // optional .onnx.TensorProto.Segment segment = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->segment_, deterministic, target);
  }

  // repeated float float_data = 4 [packed = true];
  if (this->float_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _float_data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->float_data_, target);
  }

  // repeated int32 int32_data = 5 [packed = true];
  if (this->int32_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _int32_data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->int32_data_, target);
  }

  // repeated bytes string_data = 6;
  for (int i = 0, n = this->string_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->string_data(i), target);
  }

  // repeated int64 int64_data = 7 [packed = true];
  if (this->int64_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _int64_data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->int64_data_, target);
  }

  // optional string name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TensorProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // optional bytes raw_data = 9;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->raw_data(), target);
  }

  // repeated double double_data = 10 [packed = true];
  if (this->double_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _double_data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_data_, target);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  if (this->uint64_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uint64_data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->uint64_data_, target);
  }

  // optional string doc_string = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), static_cast<int>(this->doc_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TensorProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorProto)
  return target;
}

size_t TensorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.TensorProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int64 dims = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->dims_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  // repeated float float_data = 4 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->float_data_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _float_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 int32_data = 5 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->int32_data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int32_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes string_data = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_data_size());
  for (int i = 0, n = this->string_data_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->string_data(i));
  }

  // repeated int64 int64_data = 7 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->int64_data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int64_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double double_data = 10 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->double_data_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _double_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->uint64_data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uint64_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 8;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes raw_data = 9;
    if (has_raw_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->raw_data());
    }

    // optional string doc_string = 12;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional .onnx.TensorProto.Segment segment = 3;
    if (has_segment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->segment_);
    }

    // optional int32 data_type = 2;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.TensorProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.TensorProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.TensorProto)
    MergeFrom(*source);
  }
}

void TensorProto::MergeFrom(const TensorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dims_.MergeFrom(from.dims_);
  float_data_.MergeFrom(from.float_data_);
  int32_data_.MergeFrom(from.int32_data_);
  string_data_.MergeFrom(from.string_data_);
  int64_data_.MergeFrom(from.int64_data_);
  double_data_.MergeFrom(from.double_data_);
  uint64_data_.MergeFrom(from.uint64_data_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_raw_data();
      raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_segment()->::onnx::TensorProto_Segment::MergeFrom(from.segment());
    }
    if (cached_has_bits & 0x00000010u) {
      data_type_ = from.data_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TensorProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.TensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorProto::CopyFrom(const TensorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorProto::IsInitialized() const {
  return true;
}

void TensorProto::Swap(TensorProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorProto::InternalSwap(TensorProto* other) {
  using std::swap;
  dims_.InternalSwap(&other->dims_);
  float_data_.InternalSwap(&other->float_data_);
  int32_data_.InternalSwap(&other->int32_data_);
  string_data_.InternalSwap(&other->string_data_);
  int64_data_.InternalSwap(&other->int64_data_);
  double_data_.InternalSwap(&other->double_data_);
  uint64_data_.InternalSwap(&other->uint64_data_);
  name_.Swap(&other->name_);
  raw_data_.Swap(&other->raw_data_);
  doc_string_.Swap(&other->doc_string_);
  swap(segment_, other->segment_);
  swap(data_type_, other->data_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorProto

// repeated int64 dims = 1;
int TensorProto::dims_size() const {
  return dims_.size();
}
void TensorProto::clear_dims() {
  dims_.Clear();
}
::google::protobuf::int64 TensorProto::dims(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.dims)
  return dims_.Get(index);
}
void TensorProto::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.dims)
}
void TensorProto::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.dims)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorProto::dims() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.dims)
  return dims_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorProto::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.dims)
  return &dims_;
}

// optional int32 data_type = 2;
bool TensorProto::has_data_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TensorProto::set_has_data_type() {
  _has_bits_[0] |= 0x00000010u;
}
void TensorProto::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void TensorProto::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::google::protobuf::int32 TensorProto::data_type() const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.data_type)
  return data_type_;
}
void TensorProto::set_data_type(::google::protobuf::int32 value) {
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:onnx.TensorProto.data_type)
}

// optional .onnx.TensorProto.Segment segment = 3;
bool TensorProto::has_segment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TensorProto::set_has_segment() {
  _has_bits_[0] |= 0x00000008u;
}
void TensorProto::clear_has_segment() {
  _has_bits_[0] &= ~0x00000008u;
}
void TensorProto::clear_segment() {
  if (segment_ != NULL) segment_->::onnx::TensorProto_Segment::Clear();
  clear_has_segment();
}
const ::onnx::TensorProto_Segment& TensorProto::segment() const {
  const ::onnx::TensorProto_Segment* p = segment_;
  // @@protoc_insertion_point(field_get:onnx.TensorProto.segment)
  return p != NULL ? *p : *reinterpret_cast<const ::onnx::TensorProto_Segment*>(
      &::onnx::_TensorProto_Segment_default_instance_);
}
::onnx::TensorProto_Segment* TensorProto::mutable_segment() {
  set_has_segment();
  if (segment_ == NULL) {
    segment_ = new ::onnx::TensorProto_Segment;
  }
  // @@protoc_insertion_point(field_mutable:onnx.TensorProto.segment)
  return segment_;
}
::onnx::TensorProto_Segment* TensorProto::release_segment() {
  // @@protoc_insertion_point(field_release:onnx.TensorProto.segment)
  clear_has_segment();
  ::onnx::TensorProto_Segment* temp = segment_;
  segment_ = NULL;
  return temp;
}
void TensorProto::set_allocated_segment(::onnx::TensorProto_Segment* segment) {
  delete segment_;
  segment_ = segment;
  if (segment) {
    set_has_segment();
  } else {
    clear_has_segment();
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TensorProto.segment)
}

// repeated float float_data = 4 [packed = true];
int TensorProto::float_data_size() const {
  return float_data_.size();
}
void TensorProto::clear_float_data() {
  float_data_.Clear();
}
float TensorProto::float_data(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.float_data)
  return float_data_.Get(index);
}
void TensorProto::set_float_data(int index, float value) {
  float_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.float_data)
}
void TensorProto::add_float_data(float value) {
  float_data_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.float_data)
}
const ::google::protobuf::RepeatedField< float >&
TensorProto::float_data() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.float_data)
  return float_data_;
}
::google::protobuf::RepeatedField< float >*
TensorProto::mutable_float_data() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.float_data)
  return &float_data_;
}

// repeated int32 int32_data = 5 [packed = true];
int TensorProto::int32_data_size() const {
  return int32_data_.size();
}
void TensorProto::clear_int32_data() {
  int32_data_.Clear();
}
::google::protobuf::int32 TensorProto::int32_data(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.int32_data)
  return int32_data_.Get(index);
}
void TensorProto::set_int32_data(int index, ::google::protobuf::int32 value) {
  int32_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.int32_data)
}
void TensorProto::add_int32_data(::google::protobuf::int32 value) {
  int32_data_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.int32_data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorProto::int32_data() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.int32_data)
  return int32_data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorProto::mutable_int32_data() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.int32_data)
  return &int32_data_;
}

// repeated bytes string_data = 6;
int TensorProto::string_data_size() const {
  return string_data_.size();
}
void TensorProto::clear_string_data() {
  string_data_.Clear();
}
const ::std::string& TensorProto::string_data(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.string_data)
  return string_data_.Get(index);
}
::std::string* TensorProto::mutable_string_data(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.TensorProto.string_data)
  return string_data_.Mutable(index);
}
void TensorProto::set_string_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.TensorProto.string_data)
  string_data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void TensorProto::set_string_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:onnx.TensorProto.string_data)
  string_data_.Mutable(index)->assign(std::move(value));
}
#endif
void TensorProto::set_string_data(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.TensorProto.string_data)
}
void TensorProto::set_string_data(int index, const void* value, size_t size) {
  string_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.TensorProto.string_data)
}
::std::string* TensorProto::add_string_data() {
  // @@protoc_insertion_point(field_add_mutable:onnx.TensorProto.string_data)
  return string_data_.Add();
}
void TensorProto::add_string_data(const ::std::string& value) {
  string_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.string_data)
}
#if LANG_CXX11
void TensorProto::add_string_data(::std::string&& value) {
  string_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:onnx.TensorProto.string_data)
}
#endif
void TensorProto::add_string_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.TensorProto.string_data)
}
void TensorProto::add_string_data(const void* value, size_t size) {
  string_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.TensorProto.string_data)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TensorProto::string_data() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.string_data)
  return string_data_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TensorProto::mutable_string_data() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.string_data)
  return &string_data_;
}

// repeated int64 int64_data = 7 [packed = true];
int TensorProto::int64_data_size() const {
  return int64_data_.size();
}
void TensorProto::clear_int64_data() {
  int64_data_.Clear();
}
::google::protobuf::int64 TensorProto::int64_data(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.int64_data)
  return int64_data_.Get(index);
}
void TensorProto::set_int64_data(int index, ::google::protobuf::int64 value) {
  int64_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.int64_data)
}
void TensorProto::add_int64_data(::google::protobuf::int64 value) {
  int64_data_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.int64_data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorProto::int64_data() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.int64_data)
  return int64_data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorProto::mutable_int64_data() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.int64_data)
  return &int64_data_;
}

// optional string name = 8;
bool TensorProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TensorProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TensorProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TensorProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TensorProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.name)
  return name_.GetNoArena();
}
void TensorProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.name)
}
#if LANG_CXX11
void TensorProto::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.TensorProto.name)
}
#endif
void TensorProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.TensorProto.name)
}
void TensorProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.TensorProto.name)
}
::std::string* TensorProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.TensorProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.TensorProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.TensorProto.name)
}

// optional string doc_string = 12;
bool TensorProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TensorProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
void TensorProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
void TensorProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& TensorProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.doc_string)
  return doc_string_.GetNoArena();
}
void TensorProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.doc_string)
}
#if LANG_CXX11
void TensorProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.TensorProto.doc_string)
}
#endif
void TensorProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.TensorProto.doc_string)
}
void TensorProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.TensorProto.doc_string)
}
::std::string* TensorProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.TensorProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.TensorProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.TensorProto.doc_string)
}

// optional bytes raw_data = 9;
bool TensorProto::has_raw_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TensorProto::set_has_raw_data() {
  _has_bits_[0] |= 0x00000002u;
}
void TensorProto::clear_has_raw_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void TensorProto::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_data();
}
const ::std::string& TensorProto::raw_data() const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.raw_data)
  return raw_data_.GetNoArena();
}
void TensorProto::set_raw_data(const ::std::string& value) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.raw_data)
}
#if LANG_CXX11
void TensorProto::set_raw_data(::std::string&& value) {
  set_has_raw_data();
  raw_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.TensorProto.raw_data)
}
#endif
void TensorProto::set_raw_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.TensorProto.raw_data)
}
void TensorProto::set_raw_data(const void* value, size_t size) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.TensorProto.raw_data)
}
::std::string* TensorProto::mutable_raw_data() {
  set_has_raw_data();
  // @@protoc_insertion_point(field_mutable:onnx.TensorProto.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorProto::release_raw_data() {
  // @@protoc_insertion_point(field_release:onnx.TensorProto.raw_data)
  clear_has_raw_data();
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    set_has_raw_data();
  } else {
    clear_has_raw_data();
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:onnx.TensorProto.raw_data)
}

// repeated double double_data = 10 [packed = true];
int TensorProto::double_data_size() const {
  return double_data_.size();
}
void TensorProto::clear_double_data() {
  double_data_.Clear();
}
double TensorProto::double_data(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.double_data)
  return double_data_.Get(index);
}
void TensorProto::set_double_data(int index, double value) {
  double_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.double_data)
}
void TensorProto::add_double_data(double value) {
  double_data_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.double_data)
}
const ::google::protobuf::RepeatedField< double >&
TensorProto::double_data() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.double_data)
  return double_data_;
}
::google::protobuf::RepeatedField< double >*
TensorProto::mutable_double_data() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.double_data)
  return &double_data_;
}

// repeated uint64 uint64_data = 11 [packed = true];
int TensorProto::uint64_data_size() const {
  return uint64_data_.size();
}
void TensorProto::clear_uint64_data() {
  uint64_data_.Clear();
}
::google::protobuf::uint64 TensorProto::uint64_data(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorProto.uint64_data)
  return uint64_data_.Get(index);
}
void TensorProto::set_uint64_data(int index, ::google::protobuf::uint64 value) {
  uint64_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:onnx.TensorProto.uint64_data)
}
void TensorProto::add_uint64_data(::google::protobuf::uint64 value) {
  uint64_data_.Add(value);
  // @@protoc_insertion_point(field_add:onnx.TensorProto.uint64_data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TensorProto::uint64_data() const {
  // @@protoc_insertion_point(field_list:onnx.TensorProto.uint64_data)
  return uint64_data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TensorProto::mutable_uint64_data() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorProto.uint64_data)
  return &uint64_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorShapeProto_Dimension::kDimValueFieldNumber;
const int TensorShapeProto_Dimension::kDimParamFieldNumber;
const int TensorShapeProto_Dimension::kDenotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorShapeProto_Dimension::TensorShapeProto_Dimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorShapeProto.Dimension)
}
TensorShapeProto_Dimension::TensorShapeProto_Dimension(const TensorShapeProto_Dimension& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  denotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_denotation()) {
    denotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.denotation_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kDimValue: {
      set_dim_value(from.dim_value());
      break;
    }
    case kDimParam: {
      set_dim_param(from.dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onnx.TensorShapeProto.Dimension)
}

void TensorShapeProto_Dimension::SharedCtor() {
  _cached_size_ = 0;
  denotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

TensorShapeProto_Dimension::~TensorShapeProto_Dimension() {
  // @@protoc_insertion_point(destructor:onnx.TensorShapeProto.Dimension)
  SharedDtor();
}

void TensorShapeProto_Dimension::SharedDtor() {
  denotation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void TensorShapeProto_Dimension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorShapeProto_Dimension::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorShapeProto_Dimension& TensorShapeProto_Dimension::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorShapeProto_Dimension* TensorShapeProto_Dimension::New(::google::protobuf::Arena* arena) const {
  TensorShapeProto_Dimension* n = new TensorShapeProto_Dimension;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorShapeProto_Dimension::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:onnx.TensorShapeProto.Dimension)
  switch (value_case()) {
    case kDimValue: {
      // No need to clear
      break;
    }
    case kDimParam: {
      value_.dim_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TensorShapeProto_Dimension::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorShapeProto.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_denotation()) {
    GOOGLE_DCHECK(!denotation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*denotation_.UnsafeRawStringPointer())->clear();
  }
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TensorShapeProto_Dimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorShapeProto.Dimension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 dim_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.dim_value_)));
          set_has_dim_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dim_param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dim_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dim_param().data(), static_cast<int>(this->dim_param().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.TensorShapeProto.Dimension.dim_param");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string denotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_denotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->denotation().data(), static_cast<int>(this->denotation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.TensorShapeProto.Dimension.denotation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorShapeProto.Dimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorShapeProto.Dimension)
  return false;
#undef DO_
}

void TensorShapeProto_Dimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorShapeProto.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (value_case()) {
    case kDimValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dim_value(), output);
      break;
    case kDimParam:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->dim_param().data(), static_cast<int>(this->dim_param().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "onnx.TensorShapeProto.Dimension.dim_param");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->dim_param(), output);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional string denotation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), static_cast<int>(this->denotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TensorShapeProto.Dimension.denotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->denotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorShapeProto.Dimension)
}

::google::protobuf::uint8* TensorShapeProto_Dimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorShapeProto.Dimension)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (value_case()) {
    case kDimValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dim_value(), target);
      break;
    case kDimParam:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->dim_param().data(), static_cast<int>(this->dim_param().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "onnx.TensorShapeProto.Dimension.dim_param");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          2, this->dim_param(), target);
      break;
    default: ;
  }
  cached_has_bits = _has_bits_[0];
  // optional string denotation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), static_cast<int>(this->denotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TensorShapeProto.Dimension.denotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->denotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorShapeProto.Dimension)
  return target;
}

size_t TensorShapeProto_Dimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.TensorShapeProto.Dimension)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string denotation = 3;
  if (has_denotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->denotation());
  }

  switch (value_case()) {
    // optional int64 dim_value = 1;
    case kDimValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dim_value());
      break;
    }
    // optional string dim_param = 2;
    case kDimParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorShapeProto_Dimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.TensorShapeProto.Dimension)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorShapeProto_Dimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorShapeProto_Dimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.TensorShapeProto.Dimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.TensorShapeProto.Dimension)
    MergeFrom(*source);
  }
}

void TensorShapeProto_Dimension::MergeFrom(const TensorShapeProto_Dimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorShapeProto.Dimension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_denotation()) {
    set_has_denotation();
    denotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.denotation_);
  }
  switch (from.value_case()) {
    case kDimValue: {
      set_dim_value(from.dim_value());
      break;
    }
    case kDimParam: {
      set_dim_param(from.dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TensorShapeProto_Dimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.TensorShapeProto.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShapeProto_Dimension::CopyFrom(const TensorShapeProto_Dimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorShapeProto.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShapeProto_Dimension::IsInitialized() const {
  return true;
}

void TensorShapeProto_Dimension::Swap(TensorShapeProto_Dimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorShapeProto_Dimension::InternalSwap(TensorShapeProto_Dimension* other) {
  using std::swap;
  denotation_.Swap(&other->denotation_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorShapeProto_Dimension::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorShapeProto_Dimension

// optional int64 dim_value = 1;
bool TensorShapeProto_Dimension::has_dim_value() const {
  return value_case() == kDimValue;
}
void TensorShapeProto_Dimension::set_has_dim_value() {
  _oneof_case_[0] = kDimValue;
}
void TensorShapeProto_Dimension::clear_dim_value() {
  if (has_dim_value()) {
    value_.dim_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 TensorShapeProto_Dimension::dim_value() const {
  // @@protoc_insertion_point(field_get:onnx.TensorShapeProto.Dimension.dim_value)
  if (has_dim_value()) {
    return value_.dim_value_;
  }
  return GOOGLE_LONGLONG(0);
}
void TensorShapeProto_Dimension::set_dim_value(::google::protobuf::int64 value) {
  if (!has_dim_value()) {
    clear_value();
    set_has_dim_value();
  }
  value_.dim_value_ = value;
  // @@protoc_insertion_point(field_set:onnx.TensorShapeProto.Dimension.dim_value)
}

// optional string dim_param = 2;
bool TensorShapeProto_Dimension::has_dim_param() const {
  return value_case() == kDimParam;
}
void TensorShapeProto_Dimension::set_has_dim_param() {
  _oneof_case_[0] = kDimParam;
}
void TensorShapeProto_Dimension::clear_dim_param() {
  if (has_dim_param()) {
    value_.dim_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TensorShapeProto_Dimension::dim_param() const {
  // @@protoc_insertion_point(field_get:onnx.TensorShapeProto.Dimension.dim_param)
  if (has_dim_param()) {
    return value_.dim_param_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TensorShapeProto_Dimension::set_dim_param(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.TensorShapeProto.Dimension.dim_param)
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.TensorShapeProto.Dimension.dim_param)
}
#if LANG_CXX11
void TensorShapeProto_Dimension::set_dim_param(::std::string&& value) {
  // @@protoc_insertion_point(field_set:onnx.TensorShapeProto.Dimension.dim_param)
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.TensorShapeProto.Dimension.dim_param)
}
#endif
void TensorShapeProto_Dimension::set_dim_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.TensorShapeProto.Dimension.dim_param)
}
void TensorShapeProto_Dimension::set_dim_param(const char* value, size_t size) {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.TensorShapeProto.Dimension.dim_param)
}
::std::string* TensorShapeProto_Dimension::mutable_dim_param() {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:onnx.TensorShapeProto.Dimension.dim_param)
  return value_.dim_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorShapeProto_Dimension::release_dim_param() {
  // @@protoc_insertion_point(field_release:onnx.TensorShapeProto.Dimension.dim_param)
  if (has_dim_param()) {
    clear_has_value();
    return value_.dim_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TensorShapeProto_Dimension::set_allocated_dim_param(::std::string* dim_param) {
  if (!has_dim_param()) {
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (dim_param != NULL) {
    set_has_dim_param();
    value_.dim_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        dim_param);
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TensorShapeProto.Dimension.dim_param)
}

// optional string denotation = 3;
bool TensorShapeProto_Dimension::has_denotation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TensorShapeProto_Dimension::set_has_denotation() {
  _has_bits_[0] |= 0x00000001u;
}
void TensorShapeProto_Dimension::clear_has_denotation() {
  _has_bits_[0] &= ~0x00000001u;
}
void TensorShapeProto_Dimension::clear_denotation() {
  denotation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_denotation();
}
const ::std::string& TensorShapeProto_Dimension::denotation() const {
  // @@protoc_insertion_point(field_get:onnx.TensorShapeProto.Dimension.denotation)
  return denotation_.GetNoArena();
}
void TensorShapeProto_Dimension::set_denotation(const ::std::string& value) {
  set_has_denotation();
  denotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.TensorShapeProto.Dimension.denotation)
}
#if LANG_CXX11
void TensorShapeProto_Dimension::set_denotation(::std::string&& value) {
  set_has_denotation();
  denotation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.TensorShapeProto.Dimension.denotation)
}
#endif
void TensorShapeProto_Dimension::set_denotation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_denotation();
  denotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.TensorShapeProto.Dimension.denotation)
}
void TensorShapeProto_Dimension::set_denotation(const char* value, size_t size) {
  set_has_denotation();
  denotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.TensorShapeProto.Dimension.denotation)
}
::std::string* TensorShapeProto_Dimension::mutable_denotation() {
  set_has_denotation();
  // @@protoc_insertion_point(field_mutable:onnx.TensorShapeProto.Dimension.denotation)
  return denotation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorShapeProto_Dimension::release_denotation() {
  // @@protoc_insertion_point(field_release:onnx.TensorShapeProto.Dimension.denotation)
  clear_has_denotation();
  return denotation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorShapeProto_Dimension::set_allocated_denotation(::std::string* denotation) {
  if (denotation != NULL) {
    set_has_denotation();
  } else {
    clear_has_denotation();
  }
  denotation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), denotation);
  // @@protoc_insertion_point(field_set_allocated:onnx.TensorShapeProto.Dimension.denotation)
}

bool TensorShapeProto_Dimension::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void TensorShapeProto_Dimension::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
TensorShapeProto_Dimension::ValueCase TensorShapeProto_Dimension::value_case() const {
  return TensorShapeProto_Dimension::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorShapeProto::kDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorShapeProto::TensorShapeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TensorShapeProto)
}
TensorShapeProto::TensorShapeProto(const TensorShapeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dim_(from.dim_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onnx.TensorShapeProto)
}

void TensorShapeProto::SharedCtor() {
  _cached_size_ = 0;
}

TensorShapeProto::~TensorShapeProto() {
  // @@protoc_insertion_point(destructor:onnx.TensorShapeProto)
  SharedDtor();
}

void TensorShapeProto::SharedDtor() {
}

void TensorShapeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorShapeProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TensorShapeProto& TensorShapeProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

TensorShapeProto* TensorShapeProto::New(::google::protobuf::Arena* arena) const {
  TensorShapeProto* n = new TensorShapeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorShapeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TensorShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dim_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TensorShapeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TensorShapeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .onnx.TensorShapeProto.Dimension dim = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dim()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TensorShapeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TensorShapeProto)
  return false;
#undef DO_
}

void TensorShapeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TensorShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dim_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dim(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TensorShapeProto)
}

::google::protobuf::uint8* TensorShapeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TensorShapeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dim_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dim(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TensorShapeProto)
  return target;
}

size_t TensorShapeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.TensorShapeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .onnx.TensorShapeProto.Dimension dim = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dim_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dim(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorShapeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.TensorShapeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorShapeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorShapeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.TensorShapeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.TensorShapeProto)
    MergeFrom(*source);
  }
}

void TensorShapeProto::MergeFrom(const TensorShapeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.TensorShapeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dim_.MergeFrom(from.dim_);
}

void TensorShapeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.TensorShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShapeProto::CopyFrom(const TensorShapeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TensorShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShapeProto::IsInitialized() const {
  return true;
}

void TensorShapeProto::Swap(TensorShapeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorShapeProto::InternalSwap(TensorShapeProto* other) {
  using std::swap;
  dim_.InternalSwap(&other->dim_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorShapeProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorShapeProto

// repeated .onnx.TensorShapeProto.Dimension dim = 1;
int TensorShapeProto::dim_size() const {
  return dim_.size();
}
void TensorShapeProto::clear_dim() {
  dim_.Clear();
}
const ::onnx::TensorShapeProto_Dimension& TensorShapeProto::dim(int index) const {
  // @@protoc_insertion_point(field_get:onnx.TensorShapeProto.dim)
  return dim_.Get(index);
}
::onnx::TensorShapeProto_Dimension* TensorShapeProto::mutable_dim(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.TensorShapeProto.dim)
  return dim_.Mutable(index);
}
::onnx::TensorShapeProto_Dimension* TensorShapeProto::add_dim() {
  // @@protoc_insertion_point(field_add:onnx.TensorShapeProto.dim)
  return dim_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::TensorShapeProto_Dimension >*
TensorShapeProto::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:onnx.TensorShapeProto.dim)
  return &dim_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::TensorShapeProto_Dimension >&
TensorShapeProto::dim() const {
  // @@protoc_insertion_point(field_list:onnx.TensorShapeProto.dim)
  return dim_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_Tensor::kElemTypeFieldNumber;
const int TypeProto_Tensor::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_Tensor::TypeProto_Tensor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TypeProto.Tensor)
}
TypeProto_Tensor::TypeProto_Tensor(const TypeProto_Tensor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape()) {
    shape_ = new ::onnx::TensorShapeProto(*from.shape_);
  } else {
    shape_ = NULL;
  }
  elem_type_ = from.elem_type_;
  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto.Tensor)
}

void TypeProto_Tensor::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&elem_type_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(elem_type_));
}

TypeProto_Tensor::~TypeProto_Tensor() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto.Tensor)
  SharedDtor();
}

void TypeProto_Tensor::SharedDtor() {
  if (this != internal_default_instance()) delete shape_;
}

void TypeProto_Tensor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_Tensor::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypeProto_Tensor& TypeProto_Tensor::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

TypeProto_Tensor* TypeProto_Tensor::New(::google::protobuf::Arena* arena) const {
  TypeProto_Tensor* n = new TypeProto_Tensor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_Tensor::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto.Tensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_shape()) {
    GOOGLE_DCHECK(shape_ != NULL);
    shape_->::onnx::TensorShapeProto::Clear();
  }
  elem_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TypeProto_Tensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TypeProto.Tensor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 elem_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_elem_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &elem_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .onnx.TensorShapeProto shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TypeProto.Tensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TypeProto.Tensor)
  return false;
#undef DO_
}

void TypeProto_Tensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TypeProto.Tensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 elem_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->elem_type(), output);
  }

  // optional .onnx.TensorShapeProto shape = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->shape_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TypeProto.Tensor)
}

::google::protobuf::uint8* TypeProto_Tensor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto.Tensor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 elem_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->elem_type(), target);
  }

  // optional .onnx.TensorShapeProto shape = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->shape_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto.Tensor)
  return target;
}

size_t TypeProto_Tensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto.Tensor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .onnx.TensorShapeProto shape = 2;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->shape_);
    }

    // optional int32 elem_type = 1;
    if (has_elem_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->elem_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_Tensor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.TypeProto.Tensor)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeProto_Tensor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_Tensor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.TypeProto.Tensor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.TypeProto.Tensor)
    MergeFrom(*source);
  }
}

void TypeProto_Tensor::MergeFrom(const TypeProto_Tensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto.Tensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_shape()->::onnx::TensorShapeProto::MergeFrom(from.shape());
    }
    if (cached_has_bits & 0x00000002u) {
      elem_type_ = from.elem_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TypeProto_Tensor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.TypeProto.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_Tensor::CopyFrom(const TypeProto_Tensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto.Tensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeProto_Tensor::IsInitialized() const {
  return true;
}

void TypeProto_Tensor::Swap(TypeProto_Tensor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_Tensor::InternalSwap(TypeProto_Tensor* other) {
  using std::swap;
  swap(shape_, other->shape_);
  swap(elem_type_, other->elem_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_Tensor::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeProto_Tensor

// optional int32 elem_type = 1;
bool TypeProto_Tensor::has_elem_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TypeProto_Tensor::set_has_elem_type() {
  _has_bits_[0] |= 0x00000002u;
}
void TypeProto_Tensor::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void TypeProto_Tensor::clear_elem_type() {
  elem_type_ = 0;
  clear_has_elem_type();
}
::google::protobuf::int32 TypeProto_Tensor::elem_type() const {
  // @@protoc_insertion_point(field_get:onnx.TypeProto.Tensor.elem_type)
  return elem_type_;
}
void TypeProto_Tensor::set_elem_type(::google::protobuf::int32 value) {
  set_has_elem_type();
  elem_type_ = value;
  // @@protoc_insertion_point(field_set:onnx.TypeProto.Tensor.elem_type)
}

// optional .onnx.TensorShapeProto shape = 2;
bool TypeProto_Tensor::has_shape() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeProto_Tensor::set_has_shape() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeProto_Tensor::clear_has_shape() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeProto_Tensor::clear_shape() {
  if (shape_ != NULL) shape_->::onnx::TensorShapeProto::Clear();
  clear_has_shape();
}
const ::onnx::TensorShapeProto& TypeProto_Tensor::shape() const {
  const ::onnx::TensorShapeProto* p = shape_;
  // @@protoc_insertion_point(field_get:onnx.TypeProto.Tensor.shape)
  return p != NULL ? *p : *reinterpret_cast<const ::onnx::TensorShapeProto*>(
      &::onnx::_TensorShapeProto_default_instance_);
}
::onnx::TensorShapeProto* TypeProto_Tensor::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::onnx::TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:onnx.TypeProto.Tensor.shape)
  return shape_;
}
::onnx::TensorShapeProto* TypeProto_Tensor::release_shape() {
  // @@protoc_insertion_point(field_release:onnx.TypeProto.Tensor.shape)
  clear_has_shape();
  ::onnx::TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void TypeProto_Tensor::set_allocated_shape(::onnx::TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.Tensor.shape)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto::kTensorTypeFieldNumber;
const int TypeProto::kDenotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto::TypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.TypeProto)
}
TypeProto::TypeProto(const TypeProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  denotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_denotation()) {
    denotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.denotation_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kTensorType: {
      mutable_tensor_type()->::onnx::TypeProto_Tensor::MergeFrom(from.tensor_type());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onnx.TypeProto)
}

void TypeProto::SharedCtor() {
  _cached_size_ = 0;
  denotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

TypeProto::~TypeProto() {
  // @@protoc_insertion_point(destructor:onnx.TypeProto)
  SharedDtor();
}

void TypeProto::SharedDtor() {
  denotation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void TypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypeProto& TypeProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

TypeProto* TypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto* n = new TypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:onnx.TypeProto)
  switch (value_case()) {
    case kTensorType: {
      delete value_.tensor_type_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.TypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_denotation()) {
    GOOGLE_DCHECK(!denotation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*denotation_.UnsafeRawStringPointer())->clear();
  }
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.TypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .onnx.TypeProto.Tensor tensor_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string denotation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_denotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->denotation().data(), static_cast<int>(this->denotation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.TypeProto.denotation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.TypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.TypeProto)
  return false;
#undef DO_
}

void TypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.TypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .onnx.TypeProto.Tensor tensor_type = 1;
  if (has_tensor_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *value_.tensor_type_, output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string denotation = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), static_cast<int>(this->denotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TypeProto.denotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->denotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.TypeProto)
}

::google::protobuf::uint8* TypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.TypeProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .onnx.TypeProto.Tensor tensor_type = 1;
  if (has_tensor_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *value_.tensor_type_, deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string denotation = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->denotation().data(), static_cast<int>(this->denotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.TypeProto.denotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->denotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.TypeProto)
  return target;
}

size_t TypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.TypeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string denotation = 6;
  if (has_denotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->denotation());
  }

  switch (value_case()) {
    // optional .onnx.TypeProto.Tensor tensor_type = 1;
    case kTensorType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.tensor_type_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.TypeProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.TypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.TypeProto)
    MergeFrom(*source);
  }
}

void TypeProto::MergeFrom(const TypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.TypeProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_denotation()) {
    set_has_denotation();
    denotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.denotation_);
  }
  switch (from.value_case()) {
    case kTensorType: {
      mutable_tensor_type()->::onnx::TypeProto_Tensor::MergeFrom(from.tensor_type());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.TypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto::CopyFrom(const TypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.TypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeProto::IsInitialized() const {
  return true;
}

void TypeProto::Swap(TypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto::InternalSwap(TypeProto* other) {
  using std::swap;
  denotation_.Swap(&other->denotation_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeProto

// optional .onnx.TypeProto.Tensor tensor_type = 1;
bool TypeProto::has_tensor_type() const {
  return value_case() == kTensorType;
}
void TypeProto::set_has_tensor_type() {
  _oneof_case_[0] = kTensorType;
}
void TypeProto::clear_tensor_type() {
  if (has_tensor_type()) {
    delete value_.tensor_type_;
    clear_has_value();
  }
}
 const ::onnx::TypeProto_Tensor& TypeProto::tensor_type() const {
  // @@protoc_insertion_point(field_get:onnx.TypeProto.tensor_type)
  return has_tensor_type()
      ? *value_.tensor_type_
      : ::onnx::TypeProto_Tensor::default_instance();
}
::onnx::TypeProto_Tensor* TypeProto::mutable_tensor_type() {
  if (!has_tensor_type()) {
    clear_value();
    set_has_tensor_type();
    value_.tensor_type_ = new ::onnx::TypeProto_Tensor;
  }
  // @@protoc_insertion_point(field_mutable:onnx.TypeProto.tensor_type)
  return value_.tensor_type_;
}
::onnx::TypeProto_Tensor* TypeProto::release_tensor_type() {
  // @@protoc_insertion_point(field_release:onnx.TypeProto.tensor_type)
  if (has_tensor_type()) {
    clear_has_value();
    ::onnx::TypeProto_Tensor* temp = value_.tensor_type_;
    value_.tensor_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_tensor_type(::onnx::TypeProto_Tensor* tensor_type) {
  clear_value();
  if (tensor_type) {
    set_has_tensor_type();
    value_.tensor_type_ = tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.tensor_type)
}

// optional string denotation = 6;
bool TypeProto::has_denotation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeProto::set_has_denotation() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeProto::clear_has_denotation() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeProto::clear_denotation() {
  denotation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_denotation();
}
const ::std::string& TypeProto::denotation() const {
  // @@protoc_insertion_point(field_get:onnx.TypeProto.denotation)
  return denotation_.GetNoArena();
}
void TypeProto::set_denotation(const ::std::string& value) {
  set_has_denotation();
  denotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.TypeProto.denotation)
}
#if LANG_CXX11
void TypeProto::set_denotation(::std::string&& value) {
  set_has_denotation();
  denotation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.TypeProto.denotation)
}
#endif
void TypeProto::set_denotation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_denotation();
  denotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.TypeProto.denotation)
}
void TypeProto::set_denotation(const char* value, size_t size) {
  set_has_denotation();
  denotation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.TypeProto.denotation)
}
::std::string* TypeProto::mutable_denotation() {
  set_has_denotation();
  // @@protoc_insertion_point(field_mutable:onnx.TypeProto.denotation)
  return denotation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeProto::release_denotation() {
  // @@protoc_insertion_point(field_release:onnx.TypeProto.denotation)
  clear_has_denotation();
  return denotation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TypeProto::set_allocated_denotation(::std::string* denotation) {
  if (denotation != NULL) {
    set_has_denotation();
  } else {
    clear_has_denotation();
  }
  denotation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), denotation);
  // @@protoc_insertion_point(field_set_allocated:onnx.TypeProto.denotation)
}

bool TypeProto::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void TypeProto::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
TypeProto::ValueCase TypeProto::value_case() const {
  return TypeProto::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperatorSetIdProto::kDomainFieldNumber;
const int OperatorSetIdProto::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperatorSetIdProto::OperatorSetIdProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_onnx_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.OperatorSetIdProto)
}
OperatorSetIdProto::OperatorSetIdProto(const OperatorSetIdProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:onnx.OperatorSetIdProto)
}

void OperatorSetIdProto::SharedCtor() {
  _cached_size_ = 0;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
}

OperatorSetIdProto::~OperatorSetIdProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorSetIdProto)
  SharedDtor();
}

void OperatorSetIdProto::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperatorSetIdProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorSetIdProto::descriptor() {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OperatorSetIdProto& OperatorSetIdProto::default_instance() {
  protobuf_onnx_2eproto::InitDefaults();
  return *internal_default_instance();
}

OperatorSetIdProto* OperatorSetIdProto::New(::google::protobuf::Arena* arena) const {
  OperatorSetIdProto* n = new OperatorSetIdProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperatorSetIdProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.OperatorSetIdProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_domain()) {
    GOOGLE_DCHECK(!domain_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*domain_.UnsafeRawStringPointer())->clear();
  }
  version_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OperatorSetIdProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.OperatorSetIdProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorSetIdProto.domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.OperatorSetIdProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.OperatorSetIdProto)
  return false;
#undef DO_
}

void OperatorSetIdProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.OperatorSetIdProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string domain = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetIdProto.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->domain(), output);
  }

  // optional int64 version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.OperatorSetIdProto)
}

::google::protobuf::uint8* OperatorSetIdProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorSetIdProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string domain = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetIdProto.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->domain(), target);
  }

  // optional int64 version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorSetIdProto)
  return target;
}

size_t OperatorSetIdProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.OperatorSetIdProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string domain = 1;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional int64 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorSetIdProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.OperatorSetIdProto)
  GOOGLE_DCHECK_NE(&from, this);
  const OperatorSetIdProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperatorSetIdProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.OperatorSetIdProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.OperatorSetIdProto)
    MergeFrom(*source);
  }
}

void OperatorSetIdProto::MergeFrom(const OperatorSetIdProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.OperatorSetIdProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OperatorSetIdProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.OperatorSetIdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorSetIdProto::CopyFrom(const OperatorSetIdProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.OperatorSetIdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperatorSetIdProto::IsInitialized() const {
  return true;
}

void OperatorSetIdProto::Swap(OperatorSetIdProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperatorSetIdProto::InternalSwap(OperatorSetIdProto* other) {
  using std::swap;
  domain_.Swap(&other->domain_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperatorSetIdProto::GetMetadata() const {
  protobuf_onnx_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_onnx_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperatorSetIdProto

// optional string domain = 1;
bool OperatorSetIdProto::has_domain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OperatorSetIdProto::set_has_domain() {
  _has_bits_[0] |= 0x00000001u;
}
void OperatorSetIdProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000001u;
}
void OperatorSetIdProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& OperatorSetIdProto::domain() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetIdProto.domain)
  return domain_.GetNoArena();
}
void OperatorSetIdProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetIdProto.domain)
}
#if LANG_CXX11
void OperatorSetIdProto::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorSetIdProto.domain)
}
#endif
void OperatorSetIdProto::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetIdProto.domain)
}
void OperatorSetIdProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetIdProto.domain)
}
::std::string* OperatorSetIdProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetIdProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorSetIdProto::release_domain() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetIdProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetIdProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetIdProto.domain)
}

// optional int64 version = 2;
bool OperatorSetIdProto::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OperatorSetIdProto::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void OperatorSetIdProto::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void OperatorSetIdProto::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
  clear_has_version();
}
::google::protobuf::int64 OperatorSetIdProto::version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetIdProto.version)
  return version_;
}
void OperatorSetIdProto::set_version(::google::protobuf::int64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetIdProto.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace onnx

// @@protoc_insertion_point(global_scope)
